// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Message.pb.h"
// @@protoc_insertion_point(imports)

@implementation MessageRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [MessageRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface MessageBuf ()
@property BOOL isRequest;
@property MessageBufRequestTypeEnum requestType;
@property (strong) MessageBufMessage* message;
@property (strong) MessageBufSession* session;
@property (strong) MessageBufNotice* notice;
@property (strong) MessageBufKeepAlive* keepAlive;
@property (strong) MessageBufUser* user;
@property (strong) MessageBufReceipt* receipt;
@property (strong) MessageBufKeepAliveReceipt* keepAliveReceipt;
@end

@implementation MessageBuf

- (BOOL) hasIsRequest {
  return !!hasIsRequest_;
}
- (void) setHasIsRequest:(BOOL) _value_ {
  hasIsRequest_ = !!_value_;
}
- (BOOL) isRequest {
  return !!isRequest_;
}
- (void) setIsRequest:(BOOL) _value_ {
  isRequest_ = !!_value_;
}
- (BOOL) hasRequestType {
  return !!hasRequestType_;
}
- (void) setHasRequestType:(BOOL) _value_ {
  hasRequestType_ = !!_value_;
}
@synthesize requestType;
- (BOOL) hasMessage {
  return !!hasMessage_;
}
- (void) setHasMessage:(BOOL) _value_ {
  hasMessage_ = !!_value_;
}
@synthesize message;
- (BOOL) hasSession {
  return !!hasSession_;
}
- (void) setHasSession:(BOOL) _value_ {
  hasSession_ = !!_value_;
}
@synthesize session;
- (BOOL) hasNotice {
  return !!hasNotice_;
}
- (void) setHasNotice:(BOOL) _value_ {
  hasNotice_ = !!_value_;
}
@synthesize notice;
- (BOOL) hasKeepAlive {
  return !!hasKeepAlive_;
}
- (void) setHasKeepAlive:(BOOL) _value_ {
  hasKeepAlive_ = !!_value_;
}
@synthesize keepAlive;
- (BOOL) hasUser {
  return !!hasUser_;
}
- (void) setHasUser:(BOOL) _value_ {
  hasUser_ = !!_value_;
}
@synthesize user;
- (BOOL) hasReceipt {
  return !!hasReceipt_;
}
- (void) setHasReceipt:(BOOL) _value_ {
  hasReceipt_ = !!_value_;
}
@synthesize receipt;
- (BOOL) hasKeepAliveReceipt {
  return !!hasKeepAliveReceipt_;
}
- (void) setHasKeepAliveReceipt:(BOOL) _value_ {
  hasKeepAliveReceipt_ = !!_value_;
}
@synthesize keepAliveReceipt;
- (instancetype) init {
  if ((self = [super init])) {
    self.isRequest = NO;
    self.requestType = MessageBufRequestTypeEnumSingleMsg;
    self.message = [MessageBufMessage defaultInstance];
    self.session = [MessageBufSession defaultInstance];
    self.notice = [MessageBufNotice defaultInstance];
    self.keepAlive = [MessageBufKeepAlive defaultInstance];
    self.user = [MessageBufUser defaultInstance];
    self.receipt = [MessageBufReceipt defaultInstance];
    self.keepAliveReceipt = [MessageBufKeepAliveReceipt defaultInstance];
  }
  return self;
}
static MessageBuf* defaultMessageBufInstance = nil;
+ (void) initialize {
  if (self == [MessageBuf class]) {
    defaultMessageBufInstance = [[MessageBuf alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultMessageBufInstance;
}
- (instancetype) defaultInstance {
  return defaultMessageBufInstance;
}
- (BOOL) isInitialized {
  if (!self.hasIsRequest) {
    return NO;
  }
  if (!self.hasRequestType) {
    return NO;
  }
  if (self.hasMessage) {
    if (!self.message.isInitialized) {
      return NO;
    }
  }
  if (self.hasSession) {
    if (!self.session.isInitialized) {
      return NO;
    }
  }
  if (self.hasNotice) {
    if (!self.notice.isInitialized) {
      return NO;
    }
  }
  if (self.hasUser) {
    if (!self.user.isInitialized) {
      return NO;
    }
  }
  if (self.hasReceipt) {
    if (!self.receipt.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasIsRequest) {
    [output writeBool:1 value:self.isRequest];
  }
  if (self.hasRequestType) {
    [output writeEnum:2 value:self.requestType];
  }
  if (self.hasMessage) {
    [output writeMessage:3 value:self.message];
  }
  if (self.hasSession) {
    [output writeMessage:4 value:self.session];
  }
  if (self.hasNotice) {
    [output writeMessage:5 value:self.notice];
  }
  if (self.hasKeepAlive) {
    [output writeMessage:6 value:self.keepAlive];
  }
  if (self.hasUser) {
    [output writeMessage:7 value:self.user];
  }
  if (self.hasReceipt) {
    [output writeMessage:8 value:self.receipt];
  }
  if (self.hasKeepAliveReceipt) {
    [output writeMessage:9 value:self.keepAliveReceipt];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasIsRequest) {
    size_ += computeBoolSize(1, self.isRequest);
  }
  if (self.hasRequestType) {
    size_ += computeEnumSize(2, self.requestType);
  }
  if (self.hasMessage) {
    size_ += computeMessageSize(3, self.message);
  }
  if (self.hasSession) {
    size_ += computeMessageSize(4, self.session);
  }
  if (self.hasNotice) {
    size_ += computeMessageSize(5, self.notice);
  }
  if (self.hasKeepAlive) {
    size_ += computeMessageSize(6, self.keepAlive);
  }
  if (self.hasUser) {
    size_ += computeMessageSize(7, self.user);
  }
  if (self.hasReceipt) {
    size_ += computeMessageSize(8, self.receipt);
  }
  if (self.hasKeepAliveReceipt) {
    size_ += computeMessageSize(9, self.keepAliveReceipt);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (MessageBuf*) parseFromData:(NSData*) data {
  return (MessageBuf*)[[[MessageBuf builder] mergeFromData:data] build];
}
+ (MessageBuf*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBuf*)[[[MessageBuf builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MessageBuf*) parseFromInputStream:(NSInputStream*) input {
  return (MessageBuf*)[[[MessageBuf builder] mergeFromInputStream:input] build];
}
+ (MessageBuf*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBuf*)[[[MessageBuf builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageBuf*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MessageBuf*)[[[MessageBuf builder] mergeFromCodedInputStream:input] build];
}
+ (MessageBuf*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBuf*)[[[MessageBuf builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageBufBuilder*) builder {
  return [[MessageBufBuilder alloc] init];
}
+ (MessageBufBuilder*) builderWithPrototype:(MessageBuf*) prototype {
  return [[MessageBuf builder] mergeFrom:prototype];
}
- (MessageBufBuilder*) builder {
  return [MessageBuf builder];
}
- (MessageBufBuilder*) toBuilder {
  return [MessageBuf builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasIsRequest) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isRequest", [NSNumber numberWithBool:self.isRequest]];
  }
  if (self.hasRequestType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"requestType", NSStringFromMessageBufRequestTypeEnum(self.requestType)];
  }
  if (self.hasMessage) {
    [output appendFormat:@"%@%@ {\n", indent, @"message"];
    [self.message writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasSession) {
    [output appendFormat:@"%@%@ {\n", indent, @"session"];
    [self.session writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasNotice) {
    [output appendFormat:@"%@%@ {\n", indent, @"notice"];
    [self.notice writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasKeepAlive) {
    [output appendFormat:@"%@%@ {\n", indent, @"keepAlive"];
    [self.keepAlive writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasUser) {
    [output appendFormat:@"%@%@ {\n", indent, @"user"];
    [self.user writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasReceipt) {
    [output appendFormat:@"%@%@ {\n", indent, @"receipt"];
    [self.receipt writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasKeepAliveReceipt) {
    [output appendFormat:@"%@%@ {\n", indent, @"keepAliveReceipt"];
    [self.keepAliveReceipt writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasIsRequest) {
    [dictionary setObject: [NSNumber numberWithBool:self.isRequest] forKey: @"isRequest"];
  }
  if (self.hasRequestType) {
    [dictionary setObject: @(self.requestType) forKey: @"requestType"];
  }
  if (self.hasMessage) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.message storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"message"];
  }
  if (self.hasSession) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.session storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"session"];
  }
  if (self.hasNotice) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.notice storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"notice"];
  }
  if (self.hasKeepAlive) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.keepAlive storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"keepAlive"];
  }
  if (self.hasUser) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.user storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"user"];
  }
  if (self.hasReceipt) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.receipt storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"receipt"];
  }
  if (self.hasKeepAliveReceipt) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.keepAliveReceipt storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"keepAliveReceipt"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[MessageBuf class]]) {
    return NO;
  }
  MessageBuf *otherMessage = other;
  return
      self.hasIsRequest == otherMessage.hasIsRequest &&
      (!self.hasIsRequest || self.isRequest == otherMessage.isRequest) &&
      self.hasRequestType == otherMessage.hasRequestType &&
      (!self.hasRequestType || self.requestType == otherMessage.requestType) &&
      self.hasMessage == otherMessage.hasMessage &&
      (!self.hasMessage || [self.message isEqual:otherMessage.message]) &&
      self.hasSession == otherMessage.hasSession &&
      (!self.hasSession || [self.session isEqual:otherMessage.session]) &&
      self.hasNotice == otherMessage.hasNotice &&
      (!self.hasNotice || [self.notice isEqual:otherMessage.notice]) &&
      self.hasKeepAlive == otherMessage.hasKeepAlive &&
      (!self.hasKeepAlive || [self.keepAlive isEqual:otherMessage.keepAlive]) &&
      self.hasUser == otherMessage.hasUser &&
      (!self.hasUser || [self.user isEqual:otherMessage.user]) &&
      self.hasReceipt == otherMessage.hasReceipt &&
      (!self.hasReceipt || [self.receipt isEqual:otherMessage.receipt]) &&
      self.hasKeepAliveReceipt == otherMessage.hasKeepAliveReceipt &&
      (!self.hasKeepAliveReceipt || [self.keepAliveReceipt isEqual:otherMessage.keepAliveReceipt]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasIsRequest) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isRequest] hash];
  }
  if (self.hasRequestType) {
    hashCode = hashCode * 31 + self.requestType;
  }
  if (self.hasMessage) {
    hashCode = hashCode * 31 + [self.message hash];
  }
  if (self.hasSession) {
    hashCode = hashCode * 31 + [self.session hash];
  }
  if (self.hasNotice) {
    hashCode = hashCode * 31 + [self.notice hash];
  }
  if (self.hasKeepAlive) {
    hashCode = hashCode * 31 + [self.keepAlive hash];
  }
  if (self.hasUser) {
    hashCode = hashCode * 31 + [self.user hash];
  }
  if (self.hasReceipt) {
    hashCode = hashCode * 31 + [self.receipt hash];
  }
  if (self.hasKeepAliveReceipt) {
    hashCode = hashCode * 31 + [self.keepAliveReceipt hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL MessageBufRequestTypeEnumIsValidValue(MessageBufRequestTypeEnum value) {
  switch (value) {
    case MessageBufRequestTypeEnumSingleMsg:
    case MessageBufRequestTypeEnumGroupMsg:
    case MessageBufRequestTypeEnumPushMsg:
    case MessageBufRequestTypeEnumEventMsg:
    case MessageBufRequestTypeEnumSession:
    case MessageBufRequestTypeEnumLogin:
    case MessageBufRequestTypeEnumLogout:
    case MessageBufRequestTypeEnumKeepalive:
    case MessageBufRequestTypeEnumReceipt:
    case MessageBufRequestTypeEnumNotice:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromMessageBufRequestTypeEnum(MessageBufRequestTypeEnum value) {
  switch (value) {
    case MessageBufRequestTypeEnumSingleMsg:
      return @"MessageBufRequestTypeEnumSingleMsg";
    case MessageBufRequestTypeEnumGroupMsg:
      return @"MessageBufRequestTypeEnumGroupMsg";
    case MessageBufRequestTypeEnumPushMsg:
      return @"MessageBufRequestTypeEnumPushMsg";
    case MessageBufRequestTypeEnumEventMsg:
      return @"MessageBufRequestTypeEnumEventMsg";
    case MessageBufRequestTypeEnumSession:
      return @"MessageBufRequestTypeEnumSession";
    case MessageBufRequestTypeEnumLogin:
      return @"MessageBufRequestTypeEnumLogin";
    case MessageBufRequestTypeEnumLogout:
      return @"MessageBufRequestTypeEnumLogout";
    case MessageBufRequestTypeEnumKeepalive:
      return @"MessageBufRequestTypeEnumKeepalive";
    case MessageBufRequestTypeEnumReceipt:
      return @"MessageBufRequestTypeEnumReceipt";
    case MessageBufRequestTypeEnumNotice:
      return @"MessageBufRequestTypeEnumNotice";
    default:
      return nil;
  }
}

BOOL MessageBufMessageTypeEnumIsValidValue(MessageBufMessageTypeEnum value) {
  switch (value) {
    case MessageBufMessageTypeEnumText:
    case MessageBufMessageTypeEnumPhoto:
    case MessageBufMessageTypeEnumVoice:
    case MessageBufMessageTypeEnumUpdateNum:
    case MessageBufMessageTypeEnumUpdateStatus:
    case MessageBufMessageTypeEnumDelete:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromMessageBufMessageTypeEnum(MessageBufMessageTypeEnum value) {
  switch (value) {
    case MessageBufMessageTypeEnumText:
      return @"MessageBufMessageTypeEnumText";
    case MessageBufMessageTypeEnumPhoto:
      return @"MessageBufMessageTypeEnumPhoto";
    case MessageBufMessageTypeEnumVoice:
      return @"MessageBufMessageTypeEnumVoice";
    case MessageBufMessageTypeEnumUpdateNum:
      return @"MessageBufMessageTypeEnumUpdateNum";
    case MessageBufMessageTypeEnumUpdateStatus:
      return @"MessageBufMessageTypeEnumUpdateStatus";
    case MessageBufMessageTypeEnumDelete:
      return @"MessageBufMessageTypeEnumDelete";
    default:
      return nil;
  }
}

BOOL MessageBufNoticeTypeEnumIsValidValue(MessageBufNoticeTypeEnum value) {
  switch (value) {
    case MessageBufNoticeTypeEnumKickUser:
    case MessageBufNoticeTypeEnumSystem:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromMessageBufNoticeTypeEnum(MessageBufNoticeTypeEnum value) {
  switch (value) {
    case MessageBufNoticeTypeEnumKickUser:
      return @"MessageBufNoticeTypeEnumKickUser";
    case MessageBufNoticeTypeEnumSystem:
      return @"MessageBufNoticeTypeEnumSystem";
    default:
      return nil;
  }
}

BOOL MessageBufLoginTypeEnumIsValidValue(MessageBufLoginTypeEnum value) {
  switch (value) {
    case MessageBufLoginTypeEnumManualLogin:
    case MessageBufLoginTypeEnumAutoLogin:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromMessageBufLoginTypeEnum(MessageBufLoginTypeEnum value) {
  switch (value) {
    case MessageBufLoginTypeEnumManualLogin:
      return @"MessageBufLoginTypeEnumManualLogin";
    case MessageBufLoginTypeEnumAutoLogin:
      return @"MessageBufLoginTypeEnumAutoLogin";
    default:
      return nil;
  }
}

BOOL MessageBufDeviceTypeEnumIsValidValue(MessageBufDeviceTypeEnum value) {
  switch (value) {
    case MessageBufDeviceTypeEnumPc:
    case MessageBufDeviceTypeEnumWeb:
    case MessageBufDeviceTypeEnumAndroid:
    case MessageBufDeviceTypeEnumIos:
    case MessageBufDeviceTypeEnumIpad:
    case MessageBufDeviceTypeEnumWinphone:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromMessageBufDeviceTypeEnum(MessageBufDeviceTypeEnum value) {
  switch (value) {
    case MessageBufDeviceTypeEnumPc:
      return @"MessageBufDeviceTypeEnumPc";
    case MessageBufDeviceTypeEnumWeb:
      return @"MessageBufDeviceTypeEnumWeb";
    case MessageBufDeviceTypeEnumAndroid:
      return @"MessageBufDeviceTypeEnumAndroid";
    case MessageBufDeviceTypeEnumIos:
      return @"MessageBufDeviceTypeEnumIos";
    case MessageBufDeviceTypeEnumIpad:
      return @"MessageBufDeviceTypeEnumIpad";
    case MessageBufDeviceTypeEnumWinphone:
      return @"MessageBufDeviceTypeEnumWinphone";
    default:
      return nil;
  }
}

BOOL MessageBufACKTypeEnumIsValidValue(MessageBufACKTypeEnum value) {
  switch (value) {
    case MessageBufACKTypeEnumConnectAck:
    case MessageBufACKTypeEnumLoginAck:
    case MessageBufACKTypeEnumMessageAck:
    case MessageBufACKTypeEnumLogoutAck:
    case MessageBufACKTypeEnumSendMsgAck:
    case MessageBufACKTypeEnumMsgInceptAck:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromMessageBufACKTypeEnum(MessageBufACKTypeEnum value) {
  switch (value) {
    case MessageBufACKTypeEnumConnectAck:
      return @"MessageBufACKTypeEnumConnectAck";
    case MessageBufACKTypeEnumLoginAck:
      return @"MessageBufACKTypeEnumLoginAck";
    case MessageBufACKTypeEnumMessageAck:
      return @"MessageBufACKTypeEnumMessageAck";
    case MessageBufACKTypeEnumLogoutAck:
      return @"MessageBufACKTypeEnumLogoutAck";
    case MessageBufACKTypeEnumSendMsgAck:
      return @"MessageBufACKTypeEnumSendMsgAck";
    case MessageBufACKTypeEnumMsgInceptAck:
      return @"MessageBufACKTypeEnumMsgInceptAck";
    default:
      return nil;
  }
}

BOOL MessageBufACKCodeEnumIsValidValue(MessageBufACKCodeEnum value) {
  switch (value) {
    case MessageBufACKCodeEnumSuccess:
    case MessageBufACKCodeEnumFailure:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromMessageBufACKCodeEnum(MessageBufACKCodeEnum value) {
  switch (value) {
    case MessageBufACKCodeEnumSuccess:
      return @"MessageBufACKCodeEnumSuccess";
    case MessageBufACKCodeEnumFailure:
      return @"MessageBufACKCodeEnumFailure";
    default:
      return nil;
  }
}

@interface MessageBufSession ()
@property SInt64 to;
@property (strong) NSString* title;
@property SInt64 sessId;
@property SInt64 msgId;
@property SInt64 msgVer;
@property SInt64 sessVer;
@property SInt64 readVer;
@property SInt32 unReadNum;
@end

@implementation MessageBufSession

- (BOOL) hasTo {
  return !!hasTo_;
}
- (void) setHasTo:(BOOL) _value_ {
  hasTo_ = !!_value_;
}
@synthesize to;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) _value_ {
  hasTitle_ = !!_value_;
}
@synthesize title;
- (BOOL) hasSessId {
  return !!hasSessId_;
}
- (void) setHasSessId:(BOOL) _value_ {
  hasSessId_ = !!_value_;
}
@synthesize sessId;
- (BOOL) hasMsgId {
  return !!hasMsgId_;
}
- (void) setHasMsgId:(BOOL) _value_ {
  hasMsgId_ = !!_value_;
}
@synthesize msgId;
- (BOOL) hasMsgVer {
  return !!hasMsgVer_;
}
- (void) setHasMsgVer:(BOOL) _value_ {
  hasMsgVer_ = !!_value_;
}
@synthesize msgVer;
- (BOOL) hasSessVer {
  return !!hasSessVer_;
}
- (void) setHasSessVer:(BOOL) _value_ {
  hasSessVer_ = !!_value_;
}
@synthesize sessVer;
- (BOOL) hasReadVer {
  return !!hasReadVer_;
}
- (void) setHasReadVer:(BOOL) _value_ {
  hasReadVer_ = !!_value_;
}
@synthesize readVer;
- (BOOL) hasUnReadNum {
  return !!hasUnReadNum_;
}
- (void) setHasUnReadNum:(BOOL) _value_ {
  hasUnReadNum_ = !!_value_;
}
@synthesize unReadNum;
- (instancetype) init {
  if ((self = [super init])) {
    self.to = 0L;
    self.title = @"";
    self.sessId = 0L;
    self.msgId = 0L;
    self.msgVer = 0L;
    self.sessVer = 0L;
    self.readVer = 0L;
    self.unReadNum = 0;
  }
  return self;
}
static MessageBufSession* defaultMessageBufSessionInstance = nil;
+ (void) initialize {
  if (self == [MessageBufSession class]) {
    defaultMessageBufSessionInstance = [[MessageBufSession alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultMessageBufSessionInstance;
}
- (instancetype) defaultInstance {
  return defaultMessageBufSessionInstance;
}
- (BOOL) isInitialized {
  if (!self.hasTo) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTo) {
    [output writeInt64:1 value:self.to];
  }
  if (self.hasTitle) {
    [output writeString:2 value:self.title];
  }
  if (self.hasSessId) {
    [output writeInt64:3 value:self.sessId];
  }
  if (self.hasMsgId) {
    [output writeInt64:4 value:self.msgId];
  }
  if (self.hasMsgVer) {
    [output writeInt64:5 value:self.msgVer];
  }
  if (self.hasSessVer) {
    [output writeInt64:6 value:self.sessVer];
  }
  if (self.hasReadVer) {
    [output writeInt64:7 value:self.readVer];
  }
  if (self.hasUnReadNum) {
    [output writeInt32:8 value:self.unReadNum];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasTo) {
    size_ += computeInt64Size(1, self.to);
  }
  if (self.hasTitle) {
    size_ += computeStringSize(2, self.title);
  }
  if (self.hasSessId) {
    size_ += computeInt64Size(3, self.sessId);
  }
  if (self.hasMsgId) {
    size_ += computeInt64Size(4, self.msgId);
  }
  if (self.hasMsgVer) {
    size_ += computeInt64Size(5, self.msgVer);
  }
  if (self.hasSessVer) {
    size_ += computeInt64Size(6, self.sessVer);
  }
  if (self.hasReadVer) {
    size_ += computeInt64Size(7, self.readVer);
  }
  if (self.hasUnReadNum) {
    size_ += computeInt32Size(8, self.unReadNum);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (MessageBufSession*) parseFromData:(NSData*) data {
  return (MessageBufSession*)[[[MessageBufSession builder] mergeFromData:data] build];
}
+ (MessageBufSession*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBufSession*)[[[MessageBufSession builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MessageBufSession*) parseFromInputStream:(NSInputStream*) input {
  return (MessageBufSession*)[[[MessageBufSession builder] mergeFromInputStream:input] build];
}
+ (MessageBufSession*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBufSession*)[[[MessageBufSession builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageBufSession*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MessageBufSession*)[[[MessageBufSession builder] mergeFromCodedInputStream:input] build];
}
+ (MessageBufSession*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBufSession*)[[[MessageBufSession builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageBufSessionBuilder*) builder {
  return [[MessageBufSessionBuilder alloc] init];
}
+ (MessageBufSessionBuilder*) builderWithPrototype:(MessageBufSession*) prototype {
  return [[MessageBufSession builder] mergeFrom:prototype];
}
- (MessageBufSessionBuilder*) builder {
  return [MessageBufSession builder];
}
- (MessageBufSessionBuilder*) toBuilder {
  return [MessageBufSession builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasTo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"to", [NSNumber numberWithLongLong:self.to]];
  }
  if (self.hasTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"title", self.title];
  }
  if (self.hasSessId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sessId", [NSNumber numberWithLongLong:self.sessId]];
  }
  if (self.hasMsgId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgId", [NSNumber numberWithLongLong:self.msgId]];
  }
  if (self.hasMsgVer) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgVer", [NSNumber numberWithLongLong:self.msgVer]];
  }
  if (self.hasSessVer) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sessVer", [NSNumber numberWithLongLong:self.sessVer]];
  }
  if (self.hasReadVer) {
    [output appendFormat:@"%@%@: %@\n", indent, @"readVer", [NSNumber numberWithLongLong:self.readVer]];
  }
  if (self.hasUnReadNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"unReadNum", [NSNumber numberWithInteger:self.unReadNum]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasTo) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.to] forKey: @"to"];
  }
  if (self.hasTitle) {
    [dictionary setObject: self.title forKey: @"title"];
  }
  if (self.hasSessId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sessId] forKey: @"sessId"];
  }
  if (self.hasMsgId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.msgId] forKey: @"msgId"];
  }
  if (self.hasMsgVer) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.msgVer] forKey: @"msgVer"];
  }
  if (self.hasSessVer) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sessVer] forKey: @"sessVer"];
  }
  if (self.hasReadVer) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.readVer] forKey: @"readVer"];
  }
  if (self.hasUnReadNum) {
    [dictionary setObject: [NSNumber numberWithInteger:self.unReadNum] forKey: @"unReadNum"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[MessageBufSession class]]) {
    return NO;
  }
  MessageBufSession *otherMessage = other;
  return
      self.hasTo == otherMessage.hasTo &&
      (!self.hasTo || self.to == otherMessage.to) &&
      self.hasTitle == otherMessage.hasTitle &&
      (!self.hasTitle || [self.title isEqual:otherMessage.title]) &&
      self.hasSessId == otherMessage.hasSessId &&
      (!self.hasSessId || self.sessId == otherMessage.sessId) &&
      self.hasMsgId == otherMessage.hasMsgId &&
      (!self.hasMsgId || self.msgId == otherMessage.msgId) &&
      self.hasMsgVer == otherMessage.hasMsgVer &&
      (!self.hasMsgVer || self.msgVer == otherMessage.msgVer) &&
      self.hasSessVer == otherMessage.hasSessVer &&
      (!self.hasSessVer || self.sessVer == otherMessage.sessVer) &&
      self.hasReadVer == otherMessage.hasReadVer &&
      (!self.hasReadVer || self.readVer == otherMessage.readVer) &&
      self.hasUnReadNum == otherMessage.hasUnReadNum &&
      (!self.hasUnReadNum || self.unReadNum == otherMessage.unReadNum) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasTo) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.to] hash];
  }
  if (self.hasTitle) {
    hashCode = hashCode * 31 + [self.title hash];
  }
  if (self.hasSessId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sessId] hash];
  }
  if (self.hasMsgId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.msgId] hash];
  }
  if (self.hasMsgVer) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.msgVer] hash];
  }
  if (self.hasSessVer) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sessVer] hash];
  }
  if (self.hasReadVer) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.readVer] hash];
  }
  if (self.hasUnReadNum) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.unReadNum] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface MessageBufSessionBuilder()
@property (strong) MessageBufSession* resultSession;
@end

@implementation MessageBufSessionBuilder
@synthesize resultSession;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSession = [[MessageBufSession alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSession;
}
- (MessageBufSessionBuilder*) clear {
  self.resultSession = [[MessageBufSession alloc] init];
  return self;
}
- (MessageBufSessionBuilder*) clone {
  return [MessageBufSession builderWithPrototype:resultSession];
}
- (MessageBufSession*) defaultInstance {
  return [MessageBufSession defaultInstance];
}
- (MessageBufSession*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MessageBufSession*) buildPartial {
  MessageBufSession* returnMe = resultSession;
  self.resultSession = nil;
  return returnMe;
}
- (MessageBufSessionBuilder*) mergeFrom:(MessageBufSession*) other {
  if (other == [MessageBufSession defaultInstance]) {
    return self;
  }
  if (other.hasTo) {
    [self setTo:other.to];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasSessId) {
    [self setSessId:other.sessId];
  }
  if (other.hasMsgId) {
    [self setMsgId:other.msgId];
  }
  if (other.hasMsgVer) {
    [self setMsgVer:other.msgVer];
  }
  if (other.hasSessVer) {
    [self setSessVer:other.sessVer];
  }
  if (other.hasReadVer) {
    [self setReadVer:other.readVer];
  }
  if (other.hasUnReadNum) {
    [self setUnReadNum:other.unReadNum];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MessageBufSessionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MessageBufSessionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setTo:[input readInt64]];
        break;
      }
      case 18: {
        [self setTitle:[input readString]];
        break;
      }
      case 24: {
        [self setSessId:[input readInt64]];
        break;
      }
      case 32: {
        [self setMsgId:[input readInt64]];
        break;
      }
      case 40: {
        [self setMsgVer:[input readInt64]];
        break;
      }
      case 48: {
        [self setSessVer:[input readInt64]];
        break;
      }
      case 56: {
        [self setReadVer:[input readInt64]];
        break;
      }
      case 64: {
        [self setUnReadNum:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasTo {
  return resultSession.hasTo;
}
- (SInt64) to {
  return resultSession.to;
}
- (MessageBufSessionBuilder*) setTo:(SInt64) value {
  resultSession.hasTo = YES;
  resultSession.to = value;
  return self;
}
- (MessageBufSessionBuilder*) clearTo {
  resultSession.hasTo = NO;
  resultSession.to = 0L;
  return self;
}
- (BOOL) hasTitle {
  return resultSession.hasTitle;
}
- (NSString*) title {
  return resultSession.title;
}
- (MessageBufSessionBuilder*) setTitle:(NSString*) value {
  resultSession.hasTitle = YES;
  resultSession.title = value;
  return self;
}
- (MessageBufSessionBuilder*) clearTitle {
  resultSession.hasTitle = NO;
  resultSession.title = @"";
  return self;
}
- (BOOL) hasSessId {
  return resultSession.hasSessId;
}
- (SInt64) sessId {
  return resultSession.sessId;
}
- (MessageBufSessionBuilder*) setSessId:(SInt64) value {
  resultSession.hasSessId = YES;
  resultSession.sessId = value;
  return self;
}
- (MessageBufSessionBuilder*) clearSessId {
  resultSession.hasSessId = NO;
  resultSession.sessId = 0L;
  return self;
}
- (BOOL) hasMsgId {
  return resultSession.hasMsgId;
}
- (SInt64) msgId {
  return resultSession.msgId;
}
- (MessageBufSessionBuilder*) setMsgId:(SInt64) value {
  resultSession.hasMsgId = YES;
  resultSession.msgId = value;
  return self;
}
- (MessageBufSessionBuilder*) clearMsgId {
  resultSession.hasMsgId = NO;
  resultSession.msgId = 0L;
  return self;
}
- (BOOL) hasMsgVer {
  return resultSession.hasMsgVer;
}
- (SInt64) msgVer {
  return resultSession.msgVer;
}
- (MessageBufSessionBuilder*) setMsgVer:(SInt64) value {
  resultSession.hasMsgVer = YES;
  resultSession.msgVer = value;
  return self;
}
- (MessageBufSessionBuilder*) clearMsgVer {
  resultSession.hasMsgVer = NO;
  resultSession.msgVer = 0L;
  return self;
}
- (BOOL) hasSessVer {
  return resultSession.hasSessVer;
}
- (SInt64) sessVer {
  return resultSession.sessVer;
}
- (MessageBufSessionBuilder*) setSessVer:(SInt64) value {
  resultSession.hasSessVer = YES;
  resultSession.sessVer = value;
  return self;
}
- (MessageBufSessionBuilder*) clearSessVer {
  resultSession.hasSessVer = NO;
  resultSession.sessVer = 0L;
  return self;
}
- (BOOL) hasReadVer {
  return resultSession.hasReadVer;
}
- (SInt64) readVer {
  return resultSession.readVer;
}
- (MessageBufSessionBuilder*) setReadVer:(SInt64) value {
  resultSession.hasReadVer = YES;
  resultSession.readVer = value;
  return self;
}
- (MessageBufSessionBuilder*) clearReadVer {
  resultSession.hasReadVer = NO;
  resultSession.readVer = 0L;
  return self;
}
- (BOOL) hasUnReadNum {
  return resultSession.hasUnReadNum;
}
- (SInt32) unReadNum {
  return resultSession.unReadNum;
}
- (MessageBufSessionBuilder*) setUnReadNum:(SInt32) value {
  resultSession.hasUnReadNum = YES;
  resultSession.unReadNum = value;
  return self;
}
- (MessageBufSessionBuilder*) clearUnReadNum {
  resultSession.hasUnReadNum = NO;
  resultSession.unReadNum = 0;
  return self;
}
@end

@interface MessageBufMessage ()
@property SInt64 msgId;
@property (strong) NSString* appId;
@property SInt32 type;
@property SInt32 subType;
@property SInt64 from;
@property (strong) NSString* fromNickName;
@property SInt64 to;
@property (strong) NSString* title;
@property (strong) NSString* summary;
@property (strong) NSString* body;
@property SInt64 clientTime;
@property SInt64 serverTime;
@property (strong) NSString* extend1;
@end

@implementation MessageBufMessage

- (BOOL) hasMsgId {
  return !!hasMsgId_;
}
- (void) setHasMsgId:(BOOL) _value_ {
  hasMsgId_ = !!_value_;
}
@synthesize msgId;
- (BOOL) hasAppId {
  return !!hasAppId_;
}
- (void) setHasAppId:(BOOL) _value_ {
  hasAppId_ = !!_value_;
}
@synthesize appId;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (BOOL) hasSubType {
  return !!hasSubType_;
}
- (void) setHasSubType:(BOOL) _value_ {
  hasSubType_ = !!_value_;
}
@synthesize subType;
- (BOOL) hasFrom {
  return !!hasFrom_;
}
- (void) setHasFrom:(BOOL) _value_ {
  hasFrom_ = !!_value_;
}
@synthesize from;
- (BOOL) hasFromNickName {
  return !!hasFromNickName_;
}
- (void) setHasFromNickName:(BOOL) _value_ {
  hasFromNickName_ = !!_value_;
}
@synthesize fromNickName;
- (BOOL) hasTo {
  return !!hasTo_;
}
- (void) setHasTo:(BOOL) _value_ {
  hasTo_ = !!_value_;
}
@synthesize to;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) _value_ {
  hasTitle_ = !!_value_;
}
@synthesize title;
- (BOOL) hasSummary {
  return !!hasSummary_;
}
- (void) setHasSummary:(BOOL) _value_ {
  hasSummary_ = !!_value_;
}
@synthesize summary;
- (BOOL) hasBody {
  return !!hasBody_;
}
- (void) setHasBody:(BOOL) _value_ {
  hasBody_ = !!_value_;
}
@synthesize body;
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) _value_ {
  hasClientTime_ = !!_value_;
}
@synthesize clientTime;
- (BOOL) hasServerTime {
  return !!hasServerTime_;
}
- (void) setHasServerTime:(BOOL) _value_ {
  hasServerTime_ = !!_value_;
}
@synthesize serverTime;
- (BOOL) hasExtend1 {
  return !!hasExtend1_;
}
- (void) setHasExtend1:(BOOL) _value_ {
  hasExtend1_ = !!_value_;
}
@synthesize extend1;
- (instancetype) init {
  if ((self = [super init])) {
    self.msgId = 0L;
    self.appId = @"";
    self.type = 0;
    self.subType = 0;
    self.from = 0L;
    self.fromNickName = @"";
    self.to = 0L;
    self.title = @"";
    self.summary = @"";
    self.body = @"";
    self.clientTime = 0L;
    self.serverTime = 0L;
    self.extend1 = @"";
  }
  return self;
}
static MessageBufMessage* defaultMessageBufMessageInstance = nil;
+ (void) initialize {
  if (self == [MessageBufMessage class]) {
    defaultMessageBufMessageInstance = [[MessageBufMessage alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultMessageBufMessageInstance;
}
- (instancetype) defaultInstance {
  return defaultMessageBufMessageInstance;
}
- (BOOL) isInitialized {
  if (!self.hasFrom) {
    return NO;
  }
  if (!self.hasTo) {
    return NO;
  }
  if (!self.hasBody) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMsgId) {
    [output writeInt64:1 value:self.msgId];
  }
  if (self.hasAppId) {
    [output writeString:2 value:self.appId];
  }
  if (self.hasType) {
    [output writeInt32:3 value:self.type];
  }
  if (self.hasSubType) {
    [output writeInt32:4 value:self.subType];
  }
  if (self.hasFrom) {
    [output writeInt64:5 value:self.from];
  }
  if (self.hasFromNickName) {
    [output writeString:6 value:self.fromNickName];
  }
  if (self.hasTo) {
    [output writeInt64:7 value:self.to];
  }
  if (self.hasTitle) {
    [output writeString:8 value:self.title];
  }
  if (self.hasSummary) {
    [output writeString:9 value:self.summary];
  }
  if (self.hasBody) {
    [output writeString:10 value:self.body];
  }
  if (self.hasClientTime) {
    [output writeInt64:11 value:self.clientTime];
  }
  if (self.hasServerTime) {
    [output writeInt64:12 value:self.serverTime];
  }
  if (self.hasExtend1) {
    [output writeString:13 value:self.extend1];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMsgId) {
    size_ += computeInt64Size(1, self.msgId);
  }
  if (self.hasAppId) {
    size_ += computeStringSize(2, self.appId);
  }
  if (self.hasType) {
    size_ += computeInt32Size(3, self.type);
  }
  if (self.hasSubType) {
    size_ += computeInt32Size(4, self.subType);
  }
  if (self.hasFrom) {
    size_ += computeInt64Size(5, self.from);
  }
  if (self.hasFromNickName) {
    size_ += computeStringSize(6, self.fromNickName);
  }
  if (self.hasTo) {
    size_ += computeInt64Size(7, self.to);
  }
  if (self.hasTitle) {
    size_ += computeStringSize(8, self.title);
  }
  if (self.hasSummary) {
    size_ += computeStringSize(9, self.summary);
  }
  if (self.hasBody) {
    size_ += computeStringSize(10, self.body);
  }
  if (self.hasClientTime) {
    size_ += computeInt64Size(11, self.clientTime);
  }
  if (self.hasServerTime) {
    size_ += computeInt64Size(12, self.serverTime);
  }
  if (self.hasExtend1) {
    size_ += computeStringSize(13, self.extend1);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (MessageBufMessage*) parseFromData:(NSData*) data {
  return (MessageBufMessage*)[[[MessageBufMessage builder] mergeFromData:data] build];
}
+ (MessageBufMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBufMessage*)[[[MessageBufMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MessageBufMessage*) parseFromInputStream:(NSInputStream*) input {
  return (MessageBufMessage*)[[[MessageBufMessage builder] mergeFromInputStream:input] build];
}
+ (MessageBufMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBufMessage*)[[[MessageBufMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageBufMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MessageBufMessage*)[[[MessageBufMessage builder] mergeFromCodedInputStream:input] build];
}
+ (MessageBufMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBufMessage*)[[[MessageBufMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageBufMessageBuilder*) builder {
  return [[MessageBufMessageBuilder alloc] init];
}
+ (MessageBufMessageBuilder*) builderWithPrototype:(MessageBufMessage*) prototype {
  return [[MessageBufMessage builder] mergeFrom:prototype];
}
- (MessageBufMessageBuilder*) builder {
  return [MessageBufMessage builder];
}
- (MessageBufMessageBuilder*) toBuilder {
  return [MessageBufMessage builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMsgId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgId", [NSNumber numberWithLongLong:self.msgId]];
  }
  if (self.hasAppId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"appId", self.appId];
  }
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", [NSNumber numberWithInteger:self.type]];
  }
  if (self.hasSubType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"subType", [NSNumber numberWithInteger:self.subType]];
  }
  if (self.hasFrom) {
    [output appendFormat:@"%@%@: %@\n", indent, @"from", [NSNumber numberWithLongLong:self.from]];
  }
  if (self.hasFromNickName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fromNickName", self.fromNickName];
  }
  if (self.hasTo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"to", [NSNumber numberWithLongLong:self.to]];
  }
  if (self.hasTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"title", self.title];
  }
  if (self.hasSummary) {
    [output appendFormat:@"%@%@: %@\n", indent, @"summary", self.summary];
  }
  if (self.hasBody) {
    [output appendFormat:@"%@%@: %@\n", indent, @"body", self.body];
  }
  if (self.hasClientTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clientTime", [NSNumber numberWithLongLong:self.clientTime]];
  }
  if (self.hasServerTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"serverTime", [NSNumber numberWithLongLong:self.serverTime]];
  }
  if (self.hasExtend1) {
    [output appendFormat:@"%@%@: %@\n", indent, @"extend1", self.extend1];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasMsgId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.msgId] forKey: @"msgId"];
  }
  if (self.hasAppId) {
    [dictionary setObject: self.appId forKey: @"appId"];
  }
  if (self.hasType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.type] forKey: @"type"];
  }
  if (self.hasSubType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.subType] forKey: @"subType"];
  }
  if (self.hasFrom) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.from] forKey: @"from"];
  }
  if (self.hasFromNickName) {
    [dictionary setObject: self.fromNickName forKey: @"fromNickName"];
  }
  if (self.hasTo) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.to] forKey: @"to"];
  }
  if (self.hasTitle) {
    [dictionary setObject: self.title forKey: @"title"];
  }
  if (self.hasSummary) {
    [dictionary setObject: self.summary forKey: @"summary"];
  }
  if (self.hasBody) {
    [dictionary setObject: self.body forKey: @"body"];
  }
  if (self.hasClientTime) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.clientTime] forKey: @"clientTime"];
  }
  if (self.hasServerTime) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.serverTime] forKey: @"serverTime"];
  }
  if (self.hasExtend1) {
    [dictionary setObject: self.extend1 forKey: @"extend1"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[MessageBufMessage class]]) {
    return NO;
  }
  MessageBufMessage *otherMessage = other;
  return
      self.hasMsgId == otherMessage.hasMsgId &&
      (!self.hasMsgId || self.msgId == otherMessage.msgId) &&
      self.hasAppId == otherMessage.hasAppId &&
      (!self.hasAppId || [self.appId isEqual:otherMessage.appId]) &&
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasSubType == otherMessage.hasSubType &&
      (!self.hasSubType || self.subType == otherMessage.subType) &&
      self.hasFrom == otherMessage.hasFrom &&
      (!self.hasFrom || self.from == otherMessage.from) &&
      self.hasFromNickName == otherMessage.hasFromNickName &&
      (!self.hasFromNickName || [self.fromNickName isEqual:otherMessage.fromNickName]) &&
      self.hasTo == otherMessage.hasTo &&
      (!self.hasTo || self.to == otherMessage.to) &&
      self.hasTitle == otherMessage.hasTitle &&
      (!self.hasTitle || [self.title isEqual:otherMessage.title]) &&
      self.hasSummary == otherMessage.hasSummary &&
      (!self.hasSummary || [self.summary isEqual:otherMessage.summary]) &&
      self.hasBody == otherMessage.hasBody &&
      (!self.hasBody || [self.body isEqual:otherMessage.body]) &&
      self.hasClientTime == otherMessage.hasClientTime &&
      (!self.hasClientTime || self.clientTime == otherMessage.clientTime) &&
      self.hasServerTime == otherMessage.hasServerTime &&
      (!self.hasServerTime || self.serverTime == otherMessage.serverTime) &&
      self.hasExtend1 == otherMessage.hasExtend1 &&
      (!self.hasExtend1 || [self.extend1 isEqual:otherMessage.extend1]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMsgId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.msgId] hash];
  }
  if (self.hasAppId) {
    hashCode = hashCode * 31 + [self.appId hash];
  }
  if (self.hasType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.type] hash];
  }
  if (self.hasSubType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.subType] hash];
  }
  if (self.hasFrom) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.from] hash];
  }
  if (self.hasFromNickName) {
    hashCode = hashCode * 31 + [self.fromNickName hash];
  }
  if (self.hasTo) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.to] hash];
  }
  if (self.hasTitle) {
    hashCode = hashCode * 31 + [self.title hash];
  }
  if (self.hasSummary) {
    hashCode = hashCode * 31 + [self.summary hash];
  }
  if (self.hasBody) {
    hashCode = hashCode * 31 + [self.body hash];
  }
  if (self.hasClientTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.clientTime] hash];
  }
  if (self.hasServerTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.serverTime] hash];
  }
  if (self.hasExtend1) {
    hashCode = hashCode * 31 + [self.extend1 hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface MessageBufMessageBuilder()
@property (strong) MessageBufMessage* resultMessage;
@end

@implementation MessageBufMessageBuilder
@synthesize resultMessage;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultMessage = [[MessageBufMessage alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultMessage;
}
- (MessageBufMessageBuilder*) clear {
  self.resultMessage = [[MessageBufMessage alloc] init];
  return self;
}
- (MessageBufMessageBuilder*) clone {
  return [MessageBufMessage builderWithPrototype:resultMessage];
}
- (MessageBufMessage*) defaultInstance {
  return [MessageBufMessage defaultInstance];
}
- (MessageBufMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MessageBufMessage*) buildPartial {
  MessageBufMessage* returnMe = resultMessage;
  self.resultMessage = nil;
  return returnMe;
}
- (MessageBufMessageBuilder*) mergeFrom:(MessageBufMessage*) other {
  if (other == [MessageBufMessage defaultInstance]) {
    return self;
  }
  if (other.hasMsgId) {
    [self setMsgId:other.msgId];
  }
  if (other.hasAppId) {
    [self setAppId:other.appId];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasSubType) {
    [self setSubType:other.subType];
  }
  if (other.hasFrom) {
    [self setFrom:other.from];
  }
  if (other.hasFromNickName) {
    [self setFromNickName:other.fromNickName];
  }
  if (other.hasTo) {
    [self setTo:other.to];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasSummary) {
    [self setSummary:other.summary];
  }
  if (other.hasBody) {
    [self setBody:other.body];
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  if (other.hasServerTime) {
    [self setServerTime:other.serverTime];
  }
  if (other.hasExtend1) {
    [self setExtend1:other.extend1];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MessageBufMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MessageBufMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMsgId:[input readInt64]];
        break;
      }
      case 18: {
        [self setAppId:[input readString]];
        break;
      }
      case 24: {
        [self setType:[input readInt32]];
        break;
      }
      case 32: {
        [self setSubType:[input readInt32]];
        break;
      }
      case 40: {
        [self setFrom:[input readInt64]];
        break;
      }
      case 50: {
        [self setFromNickName:[input readString]];
        break;
      }
      case 56: {
        [self setTo:[input readInt64]];
        break;
      }
      case 66: {
        [self setTitle:[input readString]];
        break;
      }
      case 74: {
        [self setSummary:[input readString]];
        break;
      }
      case 82: {
        [self setBody:[input readString]];
        break;
      }
      case 88: {
        [self setClientTime:[input readInt64]];
        break;
      }
      case 96: {
        [self setServerTime:[input readInt64]];
        break;
      }
      case 106: {
        [self setExtend1:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasMsgId {
  return resultMessage.hasMsgId;
}
- (SInt64) msgId {
  return resultMessage.msgId;
}
- (MessageBufMessageBuilder*) setMsgId:(SInt64) value {
  resultMessage.hasMsgId = YES;
  resultMessage.msgId = value;
  return self;
}
- (MessageBufMessageBuilder*) clearMsgId {
  resultMessage.hasMsgId = NO;
  resultMessage.msgId = 0L;
  return self;
}
- (BOOL) hasAppId {
  return resultMessage.hasAppId;
}
- (NSString*) appId {
  return resultMessage.appId;
}
- (MessageBufMessageBuilder*) setAppId:(NSString*) value {
  resultMessage.hasAppId = YES;
  resultMessage.appId = value;
  return self;
}
- (MessageBufMessageBuilder*) clearAppId {
  resultMessage.hasAppId = NO;
  resultMessage.appId = @"";
  return self;
}
- (BOOL) hasType {
  return resultMessage.hasType;
}
- (SInt32) type {
  return resultMessage.type;
}
- (MessageBufMessageBuilder*) setType:(SInt32) value {
  resultMessage.hasType = YES;
  resultMessage.type = value;
  return self;
}
- (MessageBufMessageBuilder*) clearType {
  resultMessage.hasType = NO;
  resultMessage.type = 0;
  return self;
}
- (BOOL) hasSubType {
  return resultMessage.hasSubType;
}
- (SInt32) subType {
  return resultMessage.subType;
}
- (MessageBufMessageBuilder*) setSubType:(SInt32) value {
  resultMessage.hasSubType = YES;
  resultMessage.subType = value;
  return self;
}
- (MessageBufMessageBuilder*) clearSubType {
  resultMessage.hasSubType = NO;
  resultMessage.subType = 0;
  return self;
}
- (BOOL) hasFrom {
  return resultMessage.hasFrom;
}
- (SInt64) from {
  return resultMessage.from;
}
- (MessageBufMessageBuilder*) setFrom:(SInt64) value {
  resultMessage.hasFrom = YES;
  resultMessage.from = value;
  return self;
}
- (MessageBufMessageBuilder*) clearFrom {
  resultMessage.hasFrom = NO;
  resultMessage.from = 0L;
  return self;
}
- (BOOL) hasFromNickName {
  return resultMessage.hasFromNickName;
}
- (NSString*) fromNickName {
  return resultMessage.fromNickName;
}
- (MessageBufMessageBuilder*) setFromNickName:(NSString*) value {
  resultMessage.hasFromNickName = YES;
  resultMessage.fromNickName = value;
  return self;
}
- (MessageBufMessageBuilder*) clearFromNickName {
  resultMessage.hasFromNickName = NO;
  resultMessage.fromNickName = @"";
  return self;
}
- (BOOL) hasTo {
  return resultMessage.hasTo;
}
- (SInt64) to {
  return resultMessage.to;
}
- (MessageBufMessageBuilder*) setTo:(SInt64) value {
  resultMessage.hasTo = YES;
  resultMessage.to = value;
  return self;
}
- (MessageBufMessageBuilder*) clearTo {
  resultMessage.hasTo = NO;
  resultMessage.to = 0L;
  return self;
}
- (BOOL) hasTitle {
  return resultMessage.hasTitle;
}
- (NSString*) title {
  return resultMessage.title;
}
- (MessageBufMessageBuilder*) setTitle:(NSString*) value {
  resultMessage.hasTitle = YES;
  resultMessage.title = value;
  return self;
}
- (MessageBufMessageBuilder*) clearTitle {
  resultMessage.hasTitle = NO;
  resultMessage.title = @"";
  return self;
}
- (BOOL) hasSummary {
  return resultMessage.hasSummary;
}
- (NSString*) summary {
  return resultMessage.summary;
}
- (MessageBufMessageBuilder*) setSummary:(NSString*) value {
  resultMessage.hasSummary = YES;
  resultMessage.summary = value;
  return self;
}
- (MessageBufMessageBuilder*) clearSummary {
  resultMessage.hasSummary = NO;
  resultMessage.summary = @"";
  return self;
}
- (BOOL) hasBody {
  return resultMessage.hasBody;
}
- (NSString*) body {
  return resultMessage.body;
}
- (MessageBufMessageBuilder*) setBody:(NSString*) value {
  resultMessage.hasBody = YES;
  resultMessage.body = value;
  return self;
}
- (MessageBufMessageBuilder*) clearBody {
  resultMessage.hasBody = NO;
  resultMessage.body = @"";
  return self;
}
- (BOOL) hasClientTime {
  return resultMessage.hasClientTime;
}
- (SInt64) clientTime {
  return resultMessage.clientTime;
}
- (MessageBufMessageBuilder*) setClientTime:(SInt64) value {
  resultMessage.hasClientTime = YES;
  resultMessage.clientTime = value;
  return self;
}
- (MessageBufMessageBuilder*) clearClientTime {
  resultMessage.hasClientTime = NO;
  resultMessage.clientTime = 0L;
  return self;
}
- (BOOL) hasServerTime {
  return resultMessage.hasServerTime;
}
- (SInt64) serverTime {
  return resultMessage.serverTime;
}
- (MessageBufMessageBuilder*) setServerTime:(SInt64) value {
  resultMessage.hasServerTime = YES;
  resultMessage.serverTime = value;
  return self;
}
- (MessageBufMessageBuilder*) clearServerTime {
  resultMessage.hasServerTime = NO;
  resultMessage.serverTime = 0L;
  return self;
}
- (BOOL) hasExtend1 {
  return resultMessage.hasExtend1;
}
- (NSString*) extend1 {
  return resultMessage.extend1;
}
- (MessageBufMessageBuilder*) setExtend1:(NSString*) value {
  resultMessage.hasExtend1 = YES;
  resultMessage.extend1 = value;
  return self;
}
- (MessageBufMessageBuilder*) clearExtend1 {
  resultMessage.hasExtend1 = NO;
  resultMessage.extend1 = @"";
  return self;
}
@end

@interface MessageBufEventMessage ()
@property SInt64 msgId;
@property SInt32 property;
@property SInt32 type;
@property SInt64 from;
@property (strong) NSString* fromNickName;
@property (strong) NSString* content;
@end

@implementation MessageBufEventMessage

- (BOOL) hasMsgId {
  return !!hasMsgId_;
}
- (void) setHasMsgId:(BOOL) _value_ {
  hasMsgId_ = !!_value_;
}
@synthesize msgId;
- (BOOL) hasProperty {
  return !!hasProperty_;
}
- (void) setHasProperty:(BOOL) _value_ {
  hasProperty_ = !!_value_;
}
@synthesize property;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (BOOL) hasFrom {
  return !!hasFrom_;
}
- (void) setHasFrom:(BOOL) _value_ {
  hasFrom_ = !!_value_;
}
@synthesize from;
- (BOOL) hasFromNickName {
  return !!hasFromNickName_;
}
- (void) setHasFromNickName:(BOOL) _value_ {
  hasFromNickName_ = !!_value_;
}
@synthesize fromNickName;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (instancetype) init {
  if ((self = [super init])) {
    self.msgId = 0L;
    self.property = 0;
    self.type = 0;
    self.from = 0L;
    self.fromNickName = @"";
    self.content = @"";
  }
  return self;
}
static MessageBufEventMessage* defaultMessageBufEventMessageInstance = nil;
+ (void) initialize {
  if (self == [MessageBufEventMessage class]) {
    defaultMessageBufEventMessageInstance = [[MessageBufEventMessage alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultMessageBufEventMessageInstance;
}
- (instancetype) defaultInstance {
  return defaultMessageBufEventMessageInstance;
}
- (BOOL) isInitialized {
  if (!self.hasFrom) {
    return NO;
  }
  if (!self.hasContent) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMsgId) {
    [output writeInt64:1 value:self.msgId];
  }
  if (self.hasProperty) {
    [output writeInt32:2 value:self.property];
  }
  if (self.hasType) {
    [output writeInt32:3 value:self.type];
  }
  if (self.hasFrom) {
    [output writeInt64:4 value:self.from];
  }
  if (self.hasFromNickName) {
    [output writeString:5 value:self.fromNickName];
  }
  if (self.hasContent) {
    [output writeString:6 value:self.content];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMsgId) {
    size_ += computeInt64Size(1, self.msgId);
  }
  if (self.hasProperty) {
    size_ += computeInt32Size(2, self.property);
  }
  if (self.hasType) {
    size_ += computeInt32Size(3, self.type);
  }
  if (self.hasFrom) {
    size_ += computeInt64Size(4, self.from);
  }
  if (self.hasFromNickName) {
    size_ += computeStringSize(5, self.fromNickName);
  }
  if (self.hasContent) {
    size_ += computeStringSize(6, self.content);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (MessageBufEventMessage*) parseFromData:(NSData*) data {
  return (MessageBufEventMessage*)[[[MessageBufEventMessage builder] mergeFromData:data] build];
}
+ (MessageBufEventMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBufEventMessage*)[[[MessageBufEventMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MessageBufEventMessage*) parseFromInputStream:(NSInputStream*) input {
  return (MessageBufEventMessage*)[[[MessageBufEventMessage builder] mergeFromInputStream:input] build];
}
+ (MessageBufEventMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBufEventMessage*)[[[MessageBufEventMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageBufEventMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MessageBufEventMessage*)[[[MessageBufEventMessage builder] mergeFromCodedInputStream:input] build];
}
+ (MessageBufEventMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBufEventMessage*)[[[MessageBufEventMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageBufEventMessageBuilder*) builder {
  return [[MessageBufEventMessageBuilder alloc] init];
}
+ (MessageBufEventMessageBuilder*) builderWithPrototype:(MessageBufEventMessage*) prototype {
  return [[MessageBufEventMessage builder] mergeFrom:prototype];
}
- (MessageBufEventMessageBuilder*) builder {
  return [MessageBufEventMessage builder];
}
- (MessageBufEventMessageBuilder*) toBuilder {
  return [MessageBufEventMessage builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMsgId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgId", [NSNumber numberWithLongLong:self.msgId]];
  }
  if (self.hasProperty) {
    [output appendFormat:@"%@%@: %@\n", indent, @"property", [NSNumber numberWithInteger:self.property]];
  }
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", [NSNumber numberWithInteger:self.type]];
  }
  if (self.hasFrom) {
    [output appendFormat:@"%@%@: %@\n", indent, @"from", [NSNumber numberWithLongLong:self.from]];
  }
  if (self.hasFromNickName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fromNickName", self.fromNickName];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasMsgId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.msgId] forKey: @"msgId"];
  }
  if (self.hasProperty) {
    [dictionary setObject: [NSNumber numberWithInteger:self.property] forKey: @"property"];
  }
  if (self.hasType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.type] forKey: @"type"];
  }
  if (self.hasFrom) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.from] forKey: @"from"];
  }
  if (self.hasFromNickName) {
    [dictionary setObject: self.fromNickName forKey: @"fromNickName"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[MessageBufEventMessage class]]) {
    return NO;
  }
  MessageBufEventMessage *otherMessage = other;
  return
      self.hasMsgId == otherMessage.hasMsgId &&
      (!self.hasMsgId || self.msgId == otherMessage.msgId) &&
      self.hasProperty == otherMessage.hasProperty &&
      (!self.hasProperty || self.property == otherMessage.property) &&
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasFrom == otherMessage.hasFrom &&
      (!self.hasFrom || self.from == otherMessage.from) &&
      self.hasFromNickName == otherMessage.hasFromNickName &&
      (!self.hasFromNickName || [self.fromNickName isEqual:otherMessage.fromNickName]) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMsgId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.msgId] hash];
  }
  if (self.hasProperty) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.property] hash];
  }
  if (self.hasType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.type] hash];
  }
  if (self.hasFrom) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.from] hash];
  }
  if (self.hasFromNickName) {
    hashCode = hashCode * 31 + [self.fromNickName hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface MessageBufEventMessageBuilder()
@property (strong) MessageBufEventMessage* resultEventMessage;
@end

@implementation MessageBufEventMessageBuilder
@synthesize resultEventMessage;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultEventMessage = [[MessageBufEventMessage alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultEventMessage;
}
- (MessageBufEventMessageBuilder*) clear {
  self.resultEventMessage = [[MessageBufEventMessage alloc] init];
  return self;
}
- (MessageBufEventMessageBuilder*) clone {
  return [MessageBufEventMessage builderWithPrototype:resultEventMessage];
}
- (MessageBufEventMessage*) defaultInstance {
  return [MessageBufEventMessage defaultInstance];
}
- (MessageBufEventMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MessageBufEventMessage*) buildPartial {
  MessageBufEventMessage* returnMe = resultEventMessage;
  self.resultEventMessage = nil;
  return returnMe;
}
- (MessageBufEventMessageBuilder*) mergeFrom:(MessageBufEventMessage*) other {
  if (other == [MessageBufEventMessage defaultInstance]) {
    return self;
  }
  if (other.hasMsgId) {
    [self setMsgId:other.msgId];
  }
  if (other.hasProperty) {
    [self setProperty:other.property];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasFrom) {
    [self setFrom:other.from];
  }
  if (other.hasFromNickName) {
    [self setFromNickName:other.fromNickName];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MessageBufEventMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MessageBufEventMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMsgId:[input readInt64]];
        break;
      }
      case 16: {
        [self setProperty:[input readInt32]];
        break;
      }
      case 24: {
        [self setType:[input readInt32]];
        break;
      }
      case 32: {
        [self setFrom:[input readInt64]];
        break;
      }
      case 42: {
        [self setFromNickName:[input readString]];
        break;
      }
      case 50: {
        [self setContent:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasMsgId {
  return resultEventMessage.hasMsgId;
}
- (SInt64) msgId {
  return resultEventMessage.msgId;
}
- (MessageBufEventMessageBuilder*) setMsgId:(SInt64) value {
  resultEventMessage.hasMsgId = YES;
  resultEventMessage.msgId = value;
  return self;
}
- (MessageBufEventMessageBuilder*) clearMsgId {
  resultEventMessage.hasMsgId = NO;
  resultEventMessage.msgId = 0L;
  return self;
}
- (BOOL) hasProperty {
  return resultEventMessage.hasProperty;
}
- (SInt32) property {
  return resultEventMessage.property;
}
- (MessageBufEventMessageBuilder*) setProperty:(SInt32) value {
  resultEventMessage.hasProperty = YES;
  resultEventMessage.property = value;
  return self;
}
- (MessageBufEventMessageBuilder*) clearProperty {
  resultEventMessage.hasProperty = NO;
  resultEventMessage.property = 0;
  return self;
}
- (BOOL) hasType {
  return resultEventMessage.hasType;
}
- (SInt32) type {
  return resultEventMessage.type;
}
- (MessageBufEventMessageBuilder*) setType:(SInt32) value {
  resultEventMessage.hasType = YES;
  resultEventMessage.type = value;
  return self;
}
- (MessageBufEventMessageBuilder*) clearType {
  resultEventMessage.hasType = NO;
  resultEventMessage.type = 0;
  return self;
}
- (BOOL) hasFrom {
  return resultEventMessage.hasFrom;
}
- (SInt64) from {
  return resultEventMessage.from;
}
- (MessageBufEventMessageBuilder*) setFrom:(SInt64) value {
  resultEventMessage.hasFrom = YES;
  resultEventMessage.from = value;
  return self;
}
- (MessageBufEventMessageBuilder*) clearFrom {
  resultEventMessage.hasFrom = NO;
  resultEventMessage.from = 0L;
  return self;
}
- (BOOL) hasFromNickName {
  return resultEventMessage.hasFromNickName;
}
- (NSString*) fromNickName {
  return resultEventMessage.fromNickName;
}
- (MessageBufEventMessageBuilder*) setFromNickName:(NSString*) value {
  resultEventMessage.hasFromNickName = YES;
  resultEventMessage.fromNickName = value;
  return self;
}
- (MessageBufEventMessageBuilder*) clearFromNickName {
  resultEventMessage.hasFromNickName = NO;
  resultEventMessage.fromNickName = @"";
  return self;
}
- (BOOL) hasContent {
  return resultEventMessage.hasContent;
}
- (NSString*) content {
  return resultEventMessage.content;
}
- (MessageBufEventMessageBuilder*) setContent:(NSString*) value {
  resultEventMessage.hasContent = YES;
  resultEventMessage.content = value;
  return self;
}
- (MessageBufEventMessageBuilder*) clearContent {
  resultEventMessage.hasContent = NO;
  resultEventMessage.content = @"";
  return self;
}
@end

@interface MessageBufNotice ()
@property SInt32 type;
@property SInt64 to;
@property (strong) NSString* deviceId;
@property (strong) NSString* content;
@property SInt64 serverTime;
@end

@implementation MessageBufNotice

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (BOOL) hasTo {
  return !!hasTo_;
}
- (void) setHasTo:(BOOL) _value_ {
  hasTo_ = !!_value_;
}
@synthesize to;
- (BOOL) hasDeviceId {
  return !!hasDeviceId_;
}
- (void) setHasDeviceId:(BOOL) _value_ {
  hasDeviceId_ = !!_value_;
}
@synthesize deviceId;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (BOOL) hasServerTime {
  return !!hasServerTime_;
}
- (void) setHasServerTime:(BOOL) _value_ {
  hasServerTime_ = !!_value_;
}
@synthesize serverTime;
- (instancetype) init {
  if ((self = [super init])) {
    self.type = 0;
    self.to = 0L;
    self.deviceId = @"";
    self.content = @"";
    self.serverTime = 0L;
  }
  return self;
}
static MessageBufNotice* defaultMessageBufNoticeInstance = nil;
+ (void) initialize {
  if (self == [MessageBufNotice class]) {
    defaultMessageBufNoticeInstance = [[MessageBufNotice alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultMessageBufNoticeInstance;
}
- (instancetype) defaultInstance {
  return defaultMessageBufNoticeInstance;
}
- (BOOL) isInitialized {
  if (!self.hasTo) {
    return NO;
  }
  if (!self.hasContent) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeInt32:1 value:self.type];
  }
  if (self.hasTo) {
    [output writeInt64:2 value:self.to];
  }
  if (self.hasDeviceId) {
    [output writeString:3 value:self.deviceId];
  }
  if (self.hasContent) {
    [output writeString:4 value:self.content];
  }
  if (self.hasServerTime) {
    [output writeInt64:5 value:self.serverTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasType) {
    size_ += computeInt32Size(1, self.type);
  }
  if (self.hasTo) {
    size_ += computeInt64Size(2, self.to);
  }
  if (self.hasDeviceId) {
    size_ += computeStringSize(3, self.deviceId);
  }
  if (self.hasContent) {
    size_ += computeStringSize(4, self.content);
  }
  if (self.hasServerTime) {
    size_ += computeInt64Size(5, self.serverTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (MessageBufNotice*) parseFromData:(NSData*) data {
  return (MessageBufNotice*)[[[MessageBufNotice builder] mergeFromData:data] build];
}
+ (MessageBufNotice*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBufNotice*)[[[MessageBufNotice builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MessageBufNotice*) parseFromInputStream:(NSInputStream*) input {
  return (MessageBufNotice*)[[[MessageBufNotice builder] mergeFromInputStream:input] build];
}
+ (MessageBufNotice*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBufNotice*)[[[MessageBufNotice builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageBufNotice*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MessageBufNotice*)[[[MessageBufNotice builder] mergeFromCodedInputStream:input] build];
}
+ (MessageBufNotice*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBufNotice*)[[[MessageBufNotice builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageBufNoticeBuilder*) builder {
  return [[MessageBufNoticeBuilder alloc] init];
}
+ (MessageBufNoticeBuilder*) builderWithPrototype:(MessageBufNotice*) prototype {
  return [[MessageBufNotice builder] mergeFrom:prototype];
}
- (MessageBufNoticeBuilder*) builder {
  return [MessageBufNotice builder];
}
- (MessageBufNoticeBuilder*) toBuilder {
  return [MessageBufNotice builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", [NSNumber numberWithInteger:self.type]];
  }
  if (self.hasTo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"to", [NSNumber numberWithLongLong:self.to]];
  }
  if (self.hasDeviceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deviceId", self.deviceId];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasServerTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"serverTime", [NSNumber numberWithLongLong:self.serverTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.type] forKey: @"type"];
  }
  if (self.hasTo) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.to] forKey: @"to"];
  }
  if (self.hasDeviceId) {
    [dictionary setObject: self.deviceId forKey: @"deviceId"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  if (self.hasServerTime) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.serverTime] forKey: @"serverTime"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[MessageBufNotice class]]) {
    return NO;
  }
  MessageBufNotice *otherMessage = other;
  return
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasTo == otherMessage.hasTo &&
      (!self.hasTo || self.to == otherMessage.to) &&
      self.hasDeviceId == otherMessage.hasDeviceId &&
      (!self.hasDeviceId || [self.deviceId isEqual:otherMessage.deviceId]) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasServerTime == otherMessage.hasServerTime &&
      (!self.hasServerTime || self.serverTime == otherMessage.serverTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.type] hash];
  }
  if (self.hasTo) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.to] hash];
  }
  if (self.hasDeviceId) {
    hashCode = hashCode * 31 + [self.deviceId hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasServerTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.serverTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface MessageBufNoticeBuilder()
@property (strong) MessageBufNotice* resultNotice;
@end

@implementation MessageBufNoticeBuilder
@synthesize resultNotice;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultNotice = [[MessageBufNotice alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultNotice;
}
- (MessageBufNoticeBuilder*) clear {
  self.resultNotice = [[MessageBufNotice alloc] init];
  return self;
}
- (MessageBufNoticeBuilder*) clone {
  return [MessageBufNotice builderWithPrototype:resultNotice];
}
- (MessageBufNotice*) defaultInstance {
  return [MessageBufNotice defaultInstance];
}
- (MessageBufNotice*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MessageBufNotice*) buildPartial {
  MessageBufNotice* returnMe = resultNotice;
  self.resultNotice = nil;
  return returnMe;
}
- (MessageBufNoticeBuilder*) mergeFrom:(MessageBufNotice*) other {
  if (other == [MessageBufNotice defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasTo) {
    [self setTo:other.to];
  }
  if (other.hasDeviceId) {
    [self setDeviceId:other.deviceId];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasServerTime) {
    [self setServerTime:other.serverTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MessageBufNoticeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MessageBufNoticeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setType:[input readInt32]];
        break;
      }
      case 16: {
        [self setTo:[input readInt64]];
        break;
      }
      case 26: {
        [self setDeviceId:[input readString]];
        break;
      }
      case 34: {
        [self setContent:[input readString]];
        break;
      }
      case 40: {
        [self setServerTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return resultNotice.hasType;
}
- (SInt32) type {
  return resultNotice.type;
}
- (MessageBufNoticeBuilder*) setType:(SInt32) value {
  resultNotice.hasType = YES;
  resultNotice.type = value;
  return self;
}
- (MessageBufNoticeBuilder*) clearType {
  resultNotice.hasType = NO;
  resultNotice.type = 0;
  return self;
}
- (BOOL) hasTo {
  return resultNotice.hasTo;
}
- (SInt64) to {
  return resultNotice.to;
}
- (MessageBufNoticeBuilder*) setTo:(SInt64) value {
  resultNotice.hasTo = YES;
  resultNotice.to = value;
  return self;
}
- (MessageBufNoticeBuilder*) clearTo {
  resultNotice.hasTo = NO;
  resultNotice.to = 0L;
  return self;
}
- (BOOL) hasDeviceId {
  return resultNotice.hasDeviceId;
}
- (NSString*) deviceId {
  return resultNotice.deviceId;
}
- (MessageBufNoticeBuilder*) setDeviceId:(NSString*) value {
  resultNotice.hasDeviceId = YES;
  resultNotice.deviceId = value;
  return self;
}
- (MessageBufNoticeBuilder*) clearDeviceId {
  resultNotice.hasDeviceId = NO;
  resultNotice.deviceId = @"";
  return self;
}
- (BOOL) hasContent {
  return resultNotice.hasContent;
}
- (NSString*) content {
  return resultNotice.content;
}
- (MessageBufNoticeBuilder*) setContent:(NSString*) value {
  resultNotice.hasContent = YES;
  resultNotice.content = value;
  return self;
}
- (MessageBufNoticeBuilder*) clearContent {
  resultNotice.hasContent = NO;
  resultNotice.content = @"";
  return self;
}
- (BOOL) hasServerTime {
  return resultNotice.hasServerTime;
}
- (SInt64) serverTime {
  return resultNotice.serverTime;
}
- (MessageBufNoticeBuilder*) setServerTime:(SInt64) value {
  resultNotice.hasServerTime = YES;
  resultNotice.serverTime = value;
  return self;
}
- (MessageBufNoticeBuilder*) clearServerTime {
  resultNotice.hasServerTime = NO;
  resultNotice.serverTime = 0L;
  return self;
}
@end

@interface MessageBufUser ()
@property SInt64 userId;
@property (strong) NSString* token;
@property (strong) NSString* appId;
@property SInt32 loginType;
@property (strong) NSString* deviceType;
@property (strong) NSString* deviceId;
@property SInt64 version;
@end

@implementation MessageBufUser

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasToken {
  return !!hasToken_;
}
- (void) setHasToken:(BOOL) _value_ {
  hasToken_ = !!_value_;
}
@synthesize token;
- (BOOL) hasAppId {
  return !!hasAppId_;
}
- (void) setHasAppId:(BOOL) _value_ {
  hasAppId_ = !!_value_;
}
@synthesize appId;
- (BOOL) hasLoginType {
  return !!hasLoginType_;
}
- (void) setHasLoginType:(BOOL) _value_ {
  hasLoginType_ = !!_value_;
}
@synthesize loginType;
- (BOOL) hasDeviceType {
  return !!hasDeviceType_;
}
- (void) setHasDeviceType:(BOOL) _value_ {
  hasDeviceType_ = !!_value_;
}
@synthesize deviceType;
- (BOOL) hasDeviceId {
  return !!hasDeviceId_;
}
- (void) setHasDeviceId:(BOOL) _value_ {
  hasDeviceId_ = !!_value_;
}
@synthesize deviceId;
- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) _value_ {
  hasVersion_ = !!_value_;
}
@synthesize version;
- (instancetype) init {
  if ((self = [super init])) {
    self.userId = 0L;
    self.token = @"";
    self.appId = @"";
    self.loginType = 0;
    self.deviceType = @"";
    self.deviceId = @"";
    self.version = 0L;
  }
  return self;
}
static MessageBufUser* defaultMessageBufUserInstance = nil;
+ (void) initialize {
  if (self == [MessageBufUser class]) {
    defaultMessageBufUserInstance = [[MessageBufUser alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultMessageBufUserInstance;
}
- (instancetype) defaultInstance {
  return defaultMessageBufUserInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeInt64:1 value:self.userId];
  }
  if (self.hasToken) {
    [output writeString:2 value:self.token];
  }
  if (self.hasAppId) {
    [output writeString:3 value:self.appId];
  }
  if (self.hasLoginType) {
    [output writeInt32:4 value:self.loginType];
  }
  if (self.hasDeviceType) {
    [output writeString:5 value:self.deviceType];
  }
  if (self.hasDeviceId) {
    [output writeString:6 value:self.deviceId];
  }
  if (self.hasVersion) {
    [output writeInt64:7 value:self.version];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeInt64Size(1, self.userId);
  }
  if (self.hasToken) {
    size_ += computeStringSize(2, self.token);
  }
  if (self.hasAppId) {
    size_ += computeStringSize(3, self.appId);
  }
  if (self.hasLoginType) {
    size_ += computeInt32Size(4, self.loginType);
  }
  if (self.hasDeviceType) {
    size_ += computeStringSize(5, self.deviceType);
  }
  if (self.hasDeviceId) {
    size_ += computeStringSize(6, self.deviceId);
  }
  if (self.hasVersion) {
    size_ += computeInt64Size(7, self.version);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (MessageBufUser*) parseFromData:(NSData*) data {
  return (MessageBufUser*)[[[MessageBufUser builder] mergeFromData:data] build];
}
+ (MessageBufUser*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBufUser*)[[[MessageBufUser builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MessageBufUser*) parseFromInputStream:(NSInputStream*) input {
  return (MessageBufUser*)[[[MessageBufUser builder] mergeFromInputStream:input] build];
}
+ (MessageBufUser*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBufUser*)[[[MessageBufUser builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageBufUser*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MessageBufUser*)[[[MessageBufUser builder] mergeFromCodedInputStream:input] build];
}
+ (MessageBufUser*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBufUser*)[[[MessageBufUser builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageBufUserBuilder*) builder {
  return [[MessageBufUserBuilder alloc] init];
}
+ (MessageBufUserBuilder*) builderWithPrototype:(MessageBufUser*) prototype {
  return [[MessageBufUser builder] mergeFrom:prototype];
}
- (MessageBufUserBuilder*) builder {
  return [MessageBufUser builder];
}
- (MessageBufUserBuilder*) toBuilder {
  return [MessageBufUser builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithLongLong:self.userId]];
  }
  if (self.hasToken) {
    [output appendFormat:@"%@%@: %@\n", indent, @"token", self.token];
  }
  if (self.hasAppId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"appId", self.appId];
  }
  if (self.hasLoginType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"loginType", [NSNumber numberWithInteger:self.loginType]];
  }
  if (self.hasDeviceType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deviceType", self.deviceType];
  }
  if (self.hasDeviceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deviceId", self.deviceId];
  }
  if (self.hasVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"version", [NSNumber numberWithLongLong:self.version]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.userId] forKey: @"userId"];
  }
  if (self.hasToken) {
    [dictionary setObject: self.token forKey: @"token"];
  }
  if (self.hasAppId) {
    [dictionary setObject: self.appId forKey: @"appId"];
  }
  if (self.hasLoginType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.loginType] forKey: @"loginType"];
  }
  if (self.hasDeviceType) {
    [dictionary setObject: self.deviceType forKey: @"deviceType"];
  }
  if (self.hasDeviceId) {
    [dictionary setObject: self.deviceId forKey: @"deviceId"];
  }
  if (self.hasVersion) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.version] forKey: @"version"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[MessageBufUser class]]) {
    return NO;
  }
  MessageBufUser *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasToken == otherMessage.hasToken &&
      (!self.hasToken || [self.token isEqual:otherMessage.token]) &&
      self.hasAppId == otherMessage.hasAppId &&
      (!self.hasAppId || [self.appId isEqual:otherMessage.appId]) &&
      self.hasLoginType == otherMessage.hasLoginType &&
      (!self.hasLoginType || self.loginType == otherMessage.loginType) &&
      self.hasDeviceType == otherMessage.hasDeviceType &&
      (!self.hasDeviceType || [self.deviceType isEqual:otherMessage.deviceType]) &&
      self.hasDeviceId == otherMessage.hasDeviceId &&
      (!self.hasDeviceId || [self.deviceId isEqual:otherMessage.deviceId]) &&
      self.hasVersion == otherMessage.hasVersion &&
      (!self.hasVersion || self.version == otherMessage.version) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.userId] hash];
  }
  if (self.hasToken) {
    hashCode = hashCode * 31 + [self.token hash];
  }
  if (self.hasAppId) {
    hashCode = hashCode * 31 + [self.appId hash];
  }
  if (self.hasLoginType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.loginType] hash];
  }
  if (self.hasDeviceType) {
    hashCode = hashCode * 31 + [self.deviceType hash];
  }
  if (self.hasDeviceId) {
    hashCode = hashCode * 31 + [self.deviceId hash];
  }
  if (self.hasVersion) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.version] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface MessageBufUserBuilder()
@property (strong) MessageBufUser* resultUser;
@end

@implementation MessageBufUserBuilder
@synthesize resultUser;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultUser = [[MessageBufUser alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultUser;
}
- (MessageBufUserBuilder*) clear {
  self.resultUser = [[MessageBufUser alloc] init];
  return self;
}
- (MessageBufUserBuilder*) clone {
  return [MessageBufUser builderWithPrototype:resultUser];
}
- (MessageBufUser*) defaultInstance {
  return [MessageBufUser defaultInstance];
}
- (MessageBufUser*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MessageBufUser*) buildPartial {
  MessageBufUser* returnMe = resultUser;
  self.resultUser = nil;
  return returnMe;
}
- (MessageBufUserBuilder*) mergeFrom:(MessageBufUser*) other {
  if (other == [MessageBufUser defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasToken) {
    [self setToken:other.token];
  }
  if (other.hasAppId) {
    [self setAppId:other.appId];
  }
  if (other.hasLoginType) {
    [self setLoginType:other.loginType];
  }
  if (other.hasDeviceType) {
    [self setDeviceType:other.deviceType];
  }
  if (other.hasDeviceId) {
    [self setDeviceId:other.deviceId];
  }
  if (other.hasVersion) {
    [self setVersion:other.version];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MessageBufUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MessageBufUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readInt64]];
        break;
      }
      case 18: {
        [self setToken:[input readString]];
        break;
      }
      case 26: {
        [self setAppId:[input readString]];
        break;
      }
      case 32: {
        [self setLoginType:[input readInt32]];
        break;
      }
      case 42: {
        [self setDeviceType:[input readString]];
        break;
      }
      case 50: {
        [self setDeviceId:[input readString]];
        break;
      }
      case 56: {
        [self setVersion:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return resultUser.hasUserId;
}
- (SInt64) userId {
  return resultUser.userId;
}
- (MessageBufUserBuilder*) setUserId:(SInt64) value {
  resultUser.hasUserId = YES;
  resultUser.userId = value;
  return self;
}
- (MessageBufUserBuilder*) clearUserId {
  resultUser.hasUserId = NO;
  resultUser.userId = 0L;
  return self;
}
- (BOOL) hasToken {
  return resultUser.hasToken;
}
- (NSString*) token {
  return resultUser.token;
}
- (MessageBufUserBuilder*) setToken:(NSString*) value {
  resultUser.hasToken = YES;
  resultUser.token = value;
  return self;
}
- (MessageBufUserBuilder*) clearToken {
  resultUser.hasToken = NO;
  resultUser.token = @"";
  return self;
}
- (BOOL) hasAppId {
  return resultUser.hasAppId;
}
- (NSString*) appId {
  return resultUser.appId;
}
- (MessageBufUserBuilder*) setAppId:(NSString*) value {
  resultUser.hasAppId = YES;
  resultUser.appId = value;
  return self;
}
- (MessageBufUserBuilder*) clearAppId {
  resultUser.hasAppId = NO;
  resultUser.appId = @"";
  return self;
}
- (BOOL) hasLoginType {
  return resultUser.hasLoginType;
}
- (SInt32) loginType {
  return resultUser.loginType;
}
- (MessageBufUserBuilder*) setLoginType:(SInt32) value {
  resultUser.hasLoginType = YES;
  resultUser.loginType = value;
  return self;
}
- (MessageBufUserBuilder*) clearLoginType {
  resultUser.hasLoginType = NO;
  resultUser.loginType = 0;
  return self;
}
- (BOOL) hasDeviceType {
  return resultUser.hasDeviceType;
}
- (NSString*) deviceType {
  return resultUser.deviceType;
}
- (MessageBufUserBuilder*) setDeviceType:(NSString*) value {
  resultUser.hasDeviceType = YES;
  resultUser.deviceType = value;
  return self;
}
- (MessageBufUserBuilder*) clearDeviceType {
  resultUser.hasDeviceType = NO;
  resultUser.deviceType = @"";
  return self;
}
- (BOOL) hasDeviceId {
  return resultUser.hasDeviceId;
}
- (NSString*) deviceId {
  return resultUser.deviceId;
}
- (MessageBufUserBuilder*) setDeviceId:(NSString*) value {
  resultUser.hasDeviceId = YES;
  resultUser.deviceId = value;
  return self;
}
- (MessageBufUserBuilder*) clearDeviceId {
  resultUser.hasDeviceId = NO;
  resultUser.deviceId = @"";
  return self;
}
- (BOOL) hasVersion {
  return resultUser.hasVersion;
}
- (SInt64) version {
  return resultUser.version;
}
- (MessageBufUserBuilder*) setVersion:(SInt64) value {
  resultUser.hasVersion = YES;
  resultUser.version = value;
  return self;
}
- (MessageBufUserBuilder*) clearVersion {
  resultUser.hasVersion = NO;
  resultUser.version = 0L;
  return self;
}
@end

@interface MessageBufKeepAlive ()
@property (strong) NSString* ping;
@end

@implementation MessageBufKeepAlive

- (BOOL) hasPing {
  return !!hasPing_;
}
- (void) setHasPing:(BOOL) _value_ {
  hasPing_ = !!_value_;
}
@synthesize ping;
- (instancetype) init {
  if ((self = [super init])) {
    self.ping = @"";
  }
  return self;
}
static MessageBufKeepAlive* defaultMessageBufKeepAliveInstance = nil;
+ (void) initialize {
  if (self == [MessageBufKeepAlive class]) {
    defaultMessageBufKeepAliveInstance = [[MessageBufKeepAlive alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultMessageBufKeepAliveInstance;
}
- (instancetype) defaultInstance {
  return defaultMessageBufKeepAliveInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPing) {
    [output writeString:1 value:self.ping];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPing) {
    size_ += computeStringSize(1, self.ping);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (MessageBufKeepAlive*) parseFromData:(NSData*) data {
  return (MessageBufKeepAlive*)[[[MessageBufKeepAlive builder] mergeFromData:data] build];
}
+ (MessageBufKeepAlive*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBufKeepAlive*)[[[MessageBufKeepAlive builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MessageBufKeepAlive*) parseFromInputStream:(NSInputStream*) input {
  return (MessageBufKeepAlive*)[[[MessageBufKeepAlive builder] mergeFromInputStream:input] build];
}
+ (MessageBufKeepAlive*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBufKeepAlive*)[[[MessageBufKeepAlive builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageBufKeepAlive*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MessageBufKeepAlive*)[[[MessageBufKeepAlive builder] mergeFromCodedInputStream:input] build];
}
+ (MessageBufKeepAlive*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBufKeepAlive*)[[[MessageBufKeepAlive builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageBufKeepAliveBuilder*) builder {
  return [[MessageBufKeepAliveBuilder alloc] init];
}
+ (MessageBufKeepAliveBuilder*) builderWithPrototype:(MessageBufKeepAlive*) prototype {
  return [[MessageBufKeepAlive builder] mergeFrom:prototype];
}
- (MessageBufKeepAliveBuilder*) builder {
  return [MessageBufKeepAlive builder];
}
- (MessageBufKeepAliveBuilder*) toBuilder {
  return [MessageBufKeepAlive builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPing) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ping", self.ping];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPing) {
    [dictionary setObject: self.ping forKey: @"ping"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[MessageBufKeepAlive class]]) {
    return NO;
  }
  MessageBufKeepAlive *otherMessage = other;
  return
      self.hasPing == otherMessage.hasPing &&
      (!self.hasPing || [self.ping isEqual:otherMessage.ping]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPing) {
    hashCode = hashCode * 31 + [self.ping hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface MessageBufKeepAliveBuilder()
@property (strong) MessageBufKeepAlive* resultKeepAlive;
@end

@implementation MessageBufKeepAliveBuilder
@synthesize resultKeepAlive;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultKeepAlive = [[MessageBufKeepAlive alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultKeepAlive;
}
- (MessageBufKeepAliveBuilder*) clear {
  self.resultKeepAlive = [[MessageBufKeepAlive alloc] init];
  return self;
}
- (MessageBufKeepAliveBuilder*) clone {
  return [MessageBufKeepAlive builderWithPrototype:resultKeepAlive];
}
- (MessageBufKeepAlive*) defaultInstance {
  return [MessageBufKeepAlive defaultInstance];
}
- (MessageBufKeepAlive*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MessageBufKeepAlive*) buildPartial {
  MessageBufKeepAlive* returnMe = resultKeepAlive;
  self.resultKeepAlive = nil;
  return returnMe;
}
- (MessageBufKeepAliveBuilder*) mergeFrom:(MessageBufKeepAlive*) other {
  if (other == [MessageBufKeepAlive defaultInstance]) {
    return self;
  }
  if (other.hasPing) {
    [self setPing:other.ping];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MessageBufKeepAliveBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MessageBufKeepAliveBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPing:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasPing {
  return resultKeepAlive.hasPing;
}
- (NSString*) ping {
  return resultKeepAlive.ping;
}
- (MessageBufKeepAliveBuilder*) setPing:(NSString*) value {
  resultKeepAlive.hasPing = YES;
  resultKeepAlive.ping = value;
  return self;
}
- (MessageBufKeepAliveBuilder*) clearPing {
  resultKeepAlive.hasPing = NO;
  resultKeepAlive.ping = @"";
  return self;
}
@end

@interface MessageBufKeepAliveReceipt ()
@property (strong) NSString* pong;
@end

@implementation MessageBufKeepAliveReceipt

- (BOOL) hasPong {
  return !!hasPong_;
}
- (void) setHasPong:(BOOL) _value_ {
  hasPong_ = !!_value_;
}
@synthesize pong;
- (instancetype) init {
  if ((self = [super init])) {
    self.pong = @"";
  }
  return self;
}
static MessageBufKeepAliveReceipt* defaultMessageBufKeepAliveReceiptInstance = nil;
+ (void) initialize {
  if (self == [MessageBufKeepAliveReceipt class]) {
    defaultMessageBufKeepAliveReceiptInstance = [[MessageBufKeepAliveReceipt alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultMessageBufKeepAliveReceiptInstance;
}
- (instancetype) defaultInstance {
  return defaultMessageBufKeepAliveReceiptInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPong) {
    [output writeString:1 value:self.pong];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPong) {
    size_ += computeStringSize(1, self.pong);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (MessageBufKeepAliveReceipt*) parseFromData:(NSData*) data {
  return (MessageBufKeepAliveReceipt*)[[[MessageBufKeepAliveReceipt builder] mergeFromData:data] build];
}
+ (MessageBufKeepAliveReceipt*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBufKeepAliveReceipt*)[[[MessageBufKeepAliveReceipt builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MessageBufKeepAliveReceipt*) parseFromInputStream:(NSInputStream*) input {
  return (MessageBufKeepAliveReceipt*)[[[MessageBufKeepAliveReceipt builder] mergeFromInputStream:input] build];
}
+ (MessageBufKeepAliveReceipt*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBufKeepAliveReceipt*)[[[MessageBufKeepAliveReceipt builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageBufKeepAliveReceipt*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MessageBufKeepAliveReceipt*)[[[MessageBufKeepAliveReceipt builder] mergeFromCodedInputStream:input] build];
}
+ (MessageBufKeepAliveReceipt*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBufKeepAliveReceipt*)[[[MessageBufKeepAliveReceipt builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageBufKeepAliveReceiptBuilder*) builder {
  return [[MessageBufKeepAliveReceiptBuilder alloc] init];
}
+ (MessageBufKeepAliveReceiptBuilder*) builderWithPrototype:(MessageBufKeepAliveReceipt*) prototype {
  return [[MessageBufKeepAliveReceipt builder] mergeFrom:prototype];
}
- (MessageBufKeepAliveReceiptBuilder*) builder {
  return [MessageBufKeepAliveReceipt builder];
}
- (MessageBufKeepAliveReceiptBuilder*) toBuilder {
  return [MessageBufKeepAliveReceipt builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPong) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pong", self.pong];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPong) {
    [dictionary setObject: self.pong forKey: @"pong"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[MessageBufKeepAliveReceipt class]]) {
    return NO;
  }
  MessageBufKeepAliveReceipt *otherMessage = other;
  return
      self.hasPong == otherMessage.hasPong &&
      (!self.hasPong || [self.pong isEqual:otherMessage.pong]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPong) {
    hashCode = hashCode * 31 + [self.pong hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface MessageBufKeepAliveReceiptBuilder()
@property (strong) MessageBufKeepAliveReceipt* resultKeepAliveReceipt;
@end

@implementation MessageBufKeepAliveReceiptBuilder
@synthesize resultKeepAliveReceipt;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultKeepAliveReceipt = [[MessageBufKeepAliveReceipt alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultKeepAliveReceipt;
}
- (MessageBufKeepAliveReceiptBuilder*) clear {
  self.resultKeepAliveReceipt = [[MessageBufKeepAliveReceipt alloc] init];
  return self;
}
- (MessageBufKeepAliveReceiptBuilder*) clone {
  return [MessageBufKeepAliveReceipt builderWithPrototype:resultKeepAliveReceipt];
}
- (MessageBufKeepAliveReceipt*) defaultInstance {
  return [MessageBufKeepAliveReceipt defaultInstance];
}
- (MessageBufKeepAliveReceipt*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MessageBufKeepAliveReceipt*) buildPartial {
  MessageBufKeepAliveReceipt* returnMe = resultKeepAliveReceipt;
  self.resultKeepAliveReceipt = nil;
  return returnMe;
}
- (MessageBufKeepAliveReceiptBuilder*) mergeFrom:(MessageBufKeepAliveReceipt*) other {
  if (other == [MessageBufKeepAliveReceipt defaultInstance]) {
    return self;
  }
  if (other.hasPong) {
    [self setPong:other.pong];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MessageBufKeepAliveReceiptBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MessageBufKeepAliveReceiptBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPong:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasPong {
  return resultKeepAliveReceipt.hasPong;
}
- (NSString*) pong {
  return resultKeepAliveReceipt.pong;
}
- (MessageBufKeepAliveReceiptBuilder*) setPong:(NSString*) value {
  resultKeepAliveReceipt.hasPong = YES;
  resultKeepAliveReceipt.pong = value;
  return self;
}
- (MessageBufKeepAliveReceiptBuilder*) clearPong {
  resultKeepAliveReceipt.hasPong = NO;
  resultKeepAliveReceipt.pong = @"";
  return self;
}
@end

@interface MessageBufReceipt ()
@property SInt32 type;
@property SInt32 stateCode;
@property (strong) MessageBufMessageACK* messageAck;
@property (strong) MessageBufLoginACK* loginAck;
@end

@implementation MessageBufReceipt

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (BOOL) hasStateCode {
  return !!hasStateCode_;
}
- (void) setHasStateCode:(BOOL) _value_ {
  hasStateCode_ = !!_value_;
}
@synthesize stateCode;
- (BOOL) hasMessageAck {
  return !!hasMessageAck_;
}
- (void) setHasMessageAck:(BOOL) _value_ {
  hasMessageAck_ = !!_value_;
}
@synthesize messageAck;
- (BOOL) hasLoginAck {
  return !!hasLoginAck_;
}
- (void) setHasLoginAck:(BOOL) _value_ {
  hasLoginAck_ = !!_value_;
}
@synthesize loginAck;
- (instancetype) init {
  if ((self = [super init])) {
    self.type = 0;
    self.stateCode = 0;
    self.messageAck = [MessageBufMessageACK defaultInstance];
    self.loginAck = [MessageBufLoginACK defaultInstance];
  }
  return self;
}
static MessageBufReceipt* defaultMessageBufReceiptInstance = nil;
+ (void) initialize {
  if (self == [MessageBufReceipt class]) {
    defaultMessageBufReceiptInstance = [[MessageBufReceipt alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultMessageBufReceiptInstance;
}
- (instancetype) defaultInstance {
  return defaultMessageBufReceiptInstance;
}
- (BOOL) isInitialized {
  if (!self.hasType) {
    return NO;
  }
  if (self.hasMessageAck) {
    if (!self.messageAck.isInitialized) {
      return NO;
    }
  }
  if (self.hasLoginAck) {
    if (!self.loginAck.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeInt32:1 value:self.type];
  }
  if (self.hasStateCode) {
    [output writeInt32:2 value:self.stateCode];
  }
  if (self.hasMessageAck) {
    [output writeMessage:3 value:self.messageAck];
  }
  if (self.hasLoginAck) {
    [output writeMessage:4 value:self.loginAck];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasType) {
    size_ += computeInt32Size(1, self.type);
  }
  if (self.hasStateCode) {
    size_ += computeInt32Size(2, self.stateCode);
  }
  if (self.hasMessageAck) {
    size_ += computeMessageSize(3, self.messageAck);
  }
  if (self.hasLoginAck) {
    size_ += computeMessageSize(4, self.loginAck);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (MessageBufReceipt*) parseFromData:(NSData*) data {
  return (MessageBufReceipt*)[[[MessageBufReceipt builder] mergeFromData:data] build];
}
+ (MessageBufReceipt*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBufReceipt*)[[[MessageBufReceipt builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MessageBufReceipt*) parseFromInputStream:(NSInputStream*) input {
  return (MessageBufReceipt*)[[[MessageBufReceipt builder] mergeFromInputStream:input] build];
}
+ (MessageBufReceipt*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBufReceipt*)[[[MessageBufReceipt builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageBufReceipt*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MessageBufReceipt*)[[[MessageBufReceipt builder] mergeFromCodedInputStream:input] build];
}
+ (MessageBufReceipt*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBufReceipt*)[[[MessageBufReceipt builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageBufReceiptBuilder*) builder {
  return [[MessageBufReceiptBuilder alloc] init];
}
+ (MessageBufReceiptBuilder*) builderWithPrototype:(MessageBufReceipt*) prototype {
  return [[MessageBufReceipt builder] mergeFrom:prototype];
}
- (MessageBufReceiptBuilder*) builder {
  return [MessageBufReceipt builder];
}
- (MessageBufReceiptBuilder*) toBuilder {
  return [MessageBufReceipt builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", [NSNumber numberWithInteger:self.type]];
  }
  if (self.hasStateCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"stateCode", [NSNumber numberWithInteger:self.stateCode]];
  }
  if (self.hasMessageAck) {
    [output appendFormat:@"%@%@ {\n", indent, @"messageAck"];
    [self.messageAck writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasLoginAck) {
    [output appendFormat:@"%@%@ {\n", indent, @"loginAck"];
    [self.loginAck writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.type] forKey: @"type"];
  }
  if (self.hasStateCode) {
    [dictionary setObject: [NSNumber numberWithInteger:self.stateCode] forKey: @"stateCode"];
  }
  if (self.hasMessageAck) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.messageAck storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"messageAck"];
  }
  if (self.hasLoginAck) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.loginAck storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"loginAck"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[MessageBufReceipt class]]) {
    return NO;
  }
  MessageBufReceipt *otherMessage = other;
  return
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasStateCode == otherMessage.hasStateCode &&
      (!self.hasStateCode || self.stateCode == otherMessage.stateCode) &&
      self.hasMessageAck == otherMessage.hasMessageAck &&
      (!self.hasMessageAck || [self.messageAck isEqual:otherMessage.messageAck]) &&
      self.hasLoginAck == otherMessage.hasLoginAck &&
      (!self.hasLoginAck || [self.loginAck isEqual:otherMessage.loginAck]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.type] hash];
  }
  if (self.hasStateCode) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.stateCode] hash];
  }
  if (self.hasMessageAck) {
    hashCode = hashCode * 31 + [self.messageAck hash];
  }
  if (self.hasLoginAck) {
    hashCode = hashCode * 31 + [self.loginAck hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface MessageBufReceiptBuilder()
@property (strong) MessageBufReceipt* resultReceipt;
@end

@implementation MessageBufReceiptBuilder
@synthesize resultReceipt;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultReceipt = [[MessageBufReceipt alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultReceipt;
}
- (MessageBufReceiptBuilder*) clear {
  self.resultReceipt = [[MessageBufReceipt alloc] init];
  return self;
}
- (MessageBufReceiptBuilder*) clone {
  return [MessageBufReceipt builderWithPrototype:resultReceipt];
}
- (MessageBufReceipt*) defaultInstance {
  return [MessageBufReceipt defaultInstance];
}
- (MessageBufReceipt*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MessageBufReceipt*) buildPartial {
  MessageBufReceipt* returnMe = resultReceipt;
  self.resultReceipt = nil;
  return returnMe;
}
- (MessageBufReceiptBuilder*) mergeFrom:(MessageBufReceipt*) other {
  if (other == [MessageBufReceipt defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasStateCode) {
    [self setStateCode:other.stateCode];
  }
  if (other.hasMessageAck) {
    [self mergeMessageAck:other.messageAck];
  }
  if (other.hasLoginAck) {
    [self mergeLoginAck:other.loginAck];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MessageBufReceiptBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MessageBufReceiptBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setType:[input readInt32]];
        break;
      }
      case 16: {
        [self setStateCode:[input readInt32]];
        break;
      }
      case 26: {
        MessageBufMessageACKBuilder* subBuilder = [MessageBufMessageACK builder];
        if (self.hasMessageAck) {
          [subBuilder mergeFrom:self.messageAck];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMessageAck:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        MessageBufLoginACKBuilder* subBuilder = [MessageBufLoginACK builder];
        if (self.hasLoginAck) {
          [subBuilder mergeFrom:self.loginAck];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setLoginAck:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return resultReceipt.hasType;
}
- (SInt32) type {
  return resultReceipt.type;
}
- (MessageBufReceiptBuilder*) setType:(SInt32) value {
  resultReceipt.hasType = YES;
  resultReceipt.type = value;
  return self;
}
- (MessageBufReceiptBuilder*) clearType {
  resultReceipt.hasType = NO;
  resultReceipt.type = 0;
  return self;
}
- (BOOL) hasStateCode {
  return resultReceipt.hasStateCode;
}
- (SInt32) stateCode {
  return resultReceipt.stateCode;
}
- (MessageBufReceiptBuilder*) setStateCode:(SInt32) value {
  resultReceipt.hasStateCode = YES;
  resultReceipt.stateCode = value;
  return self;
}
- (MessageBufReceiptBuilder*) clearStateCode {
  resultReceipt.hasStateCode = NO;
  resultReceipt.stateCode = 0;
  return self;
}
- (BOOL) hasMessageAck {
  return resultReceipt.hasMessageAck;
}
- (MessageBufMessageACK*) messageAck {
  return resultReceipt.messageAck;
}
- (MessageBufReceiptBuilder*) setMessageAck:(MessageBufMessageACK*) value {
  resultReceipt.hasMessageAck = YES;
  resultReceipt.messageAck = value;
  return self;
}
- (MessageBufReceiptBuilder*) setMessageAckBuilder:(MessageBufMessageACKBuilder*) builderForValue {
  return [self setMessageAck:[builderForValue build]];
}
- (MessageBufReceiptBuilder*) mergeMessageAck:(MessageBufMessageACK*) value {
  if (resultReceipt.hasMessageAck &&
      resultReceipt.messageAck != [MessageBufMessageACK defaultInstance]) {
    resultReceipt.messageAck =
      [[[MessageBufMessageACK builderWithPrototype:resultReceipt.messageAck] mergeFrom:value] buildPartial];
  } else {
    resultReceipt.messageAck = value;
  }
  resultReceipt.hasMessageAck = YES;
  return self;
}
- (MessageBufReceiptBuilder*) clearMessageAck {
  resultReceipt.hasMessageAck = NO;
  resultReceipt.messageAck = [MessageBufMessageACK defaultInstance];
  return self;
}
- (BOOL) hasLoginAck {
  return resultReceipt.hasLoginAck;
}
- (MessageBufLoginACK*) loginAck {
  return resultReceipt.loginAck;
}
- (MessageBufReceiptBuilder*) setLoginAck:(MessageBufLoginACK*) value {
  resultReceipt.hasLoginAck = YES;
  resultReceipt.loginAck = value;
  return self;
}
- (MessageBufReceiptBuilder*) setLoginAckBuilder:(MessageBufLoginACKBuilder*) builderForValue {
  return [self setLoginAck:[builderForValue build]];
}
- (MessageBufReceiptBuilder*) mergeLoginAck:(MessageBufLoginACK*) value {
  if (resultReceipt.hasLoginAck &&
      resultReceipt.loginAck != [MessageBufLoginACK defaultInstance]) {
    resultReceipt.loginAck =
      [[[MessageBufLoginACK builderWithPrototype:resultReceipt.loginAck] mergeFrom:value] buildPartial];
  } else {
    resultReceipt.loginAck = value;
  }
  resultReceipt.hasLoginAck = YES;
  return self;
}
- (MessageBufReceiptBuilder*) clearLoginAck {
  resultReceipt.hasLoginAck = NO;
  resultReceipt.loginAck = [MessageBufLoginACK defaultInstance];
  return self;
}
@end

@interface MessageBufMessageACK ()
@property SInt64 sessId;
@property SInt64 sessVer;
@property SInt64 msgId;
@property SInt64 msgVer;
@property SInt64 cMsgId;
@property SInt64 serverTime;
@end

@implementation MessageBufMessageACK

- (BOOL) hasSessId {
  return !!hasSessId_;
}
- (void) setHasSessId:(BOOL) _value_ {
  hasSessId_ = !!_value_;
}
@synthesize sessId;
- (BOOL) hasSessVer {
  return !!hasSessVer_;
}
- (void) setHasSessVer:(BOOL) _value_ {
  hasSessVer_ = !!_value_;
}
@synthesize sessVer;
- (BOOL) hasMsgId {
  return !!hasMsgId_;
}
- (void) setHasMsgId:(BOOL) _value_ {
  hasMsgId_ = !!_value_;
}
@synthesize msgId;
- (BOOL) hasMsgVer {
  return !!hasMsgVer_;
}
- (void) setHasMsgVer:(BOOL) _value_ {
  hasMsgVer_ = !!_value_;
}
@synthesize msgVer;
- (BOOL) hasCMsgId {
  return !!hasCMsgId_;
}
- (void) setHasCMsgId:(BOOL) _value_ {
  hasCMsgId_ = !!_value_;
}
@synthesize cMsgId;
- (BOOL) hasServerTime {
  return !!hasServerTime_;
}
- (void) setHasServerTime:(BOOL) _value_ {
  hasServerTime_ = !!_value_;
}
@synthesize serverTime;
- (instancetype) init {
  if ((self = [super init])) {
    self.sessId = 0L;
    self.sessVer = 0L;
    self.msgId = 0L;
    self.msgVer = 0L;
    self.cMsgId = 0L;
    self.serverTime = 0L;
  }
  return self;
}
static MessageBufMessageACK* defaultMessageBufMessageACKInstance = nil;
+ (void) initialize {
  if (self == [MessageBufMessageACK class]) {
    defaultMessageBufMessageACKInstance = [[MessageBufMessageACK alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultMessageBufMessageACKInstance;
}
- (instancetype) defaultInstance {
  return defaultMessageBufMessageACKInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSessVer) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSessId) {
    [output writeInt64:1 value:self.sessId];
  }
  if (self.hasSessVer) {
    [output writeInt64:2 value:self.sessVer];
  }
  if (self.hasMsgId) {
    [output writeInt64:3 value:self.msgId];
  }
  if (self.hasMsgVer) {
    [output writeInt64:4 value:self.msgVer];
  }
  if (self.hasCMsgId) {
    [output writeInt64:5 value:self.cMsgId];
  }
  if (self.hasServerTime) {
    [output writeInt64:6 value:self.serverTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSessId) {
    size_ += computeInt64Size(1, self.sessId);
  }
  if (self.hasSessVer) {
    size_ += computeInt64Size(2, self.sessVer);
  }
  if (self.hasMsgId) {
    size_ += computeInt64Size(3, self.msgId);
  }
  if (self.hasMsgVer) {
    size_ += computeInt64Size(4, self.msgVer);
  }
  if (self.hasCMsgId) {
    size_ += computeInt64Size(5, self.cMsgId);
  }
  if (self.hasServerTime) {
    size_ += computeInt64Size(6, self.serverTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (MessageBufMessageACK*) parseFromData:(NSData*) data {
  return (MessageBufMessageACK*)[[[MessageBufMessageACK builder] mergeFromData:data] build];
}
+ (MessageBufMessageACK*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBufMessageACK*)[[[MessageBufMessageACK builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MessageBufMessageACK*) parseFromInputStream:(NSInputStream*) input {
  return (MessageBufMessageACK*)[[[MessageBufMessageACK builder] mergeFromInputStream:input] build];
}
+ (MessageBufMessageACK*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBufMessageACK*)[[[MessageBufMessageACK builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageBufMessageACK*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MessageBufMessageACK*)[[[MessageBufMessageACK builder] mergeFromCodedInputStream:input] build];
}
+ (MessageBufMessageACK*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBufMessageACK*)[[[MessageBufMessageACK builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageBufMessageACKBuilder*) builder {
  return [[MessageBufMessageACKBuilder alloc] init];
}
+ (MessageBufMessageACKBuilder*) builderWithPrototype:(MessageBufMessageACK*) prototype {
  return [[MessageBufMessageACK builder] mergeFrom:prototype];
}
- (MessageBufMessageACKBuilder*) builder {
  return [MessageBufMessageACK builder];
}
- (MessageBufMessageACKBuilder*) toBuilder {
  return [MessageBufMessageACK builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSessId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sessId", [NSNumber numberWithLongLong:self.sessId]];
  }
  if (self.hasSessVer) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sessVer", [NSNumber numberWithLongLong:self.sessVer]];
  }
  if (self.hasMsgId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgId", [NSNumber numberWithLongLong:self.msgId]];
  }
  if (self.hasMsgVer) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgVer", [NSNumber numberWithLongLong:self.msgVer]];
  }
  if (self.hasCMsgId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cMsgId", [NSNumber numberWithLongLong:self.cMsgId]];
  }
  if (self.hasServerTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"serverTime", [NSNumber numberWithLongLong:self.serverTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasSessId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sessId] forKey: @"sessId"];
  }
  if (self.hasSessVer) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sessVer] forKey: @"sessVer"];
  }
  if (self.hasMsgId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.msgId] forKey: @"msgId"];
  }
  if (self.hasMsgVer) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.msgVer] forKey: @"msgVer"];
  }
  if (self.hasCMsgId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.cMsgId] forKey: @"cMsgId"];
  }
  if (self.hasServerTime) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.serverTime] forKey: @"serverTime"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[MessageBufMessageACK class]]) {
    return NO;
  }
  MessageBufMessageACK *otherMessage = other;
  return
      self.hasSessId == otherMessage.hasSessId &&
      (!self.hasSessId || self.sessId == otherMessage.sessId) &&
      self.hasSessVer == otherMessage.hasSessVer &&
      (!self.hasSessVer || self.sessVer == otherMessage.sessVer) &&
      self.hasMsgId == otherMessage.hasMsgId &&
      (!self.hasMsgId || self.msgId == otherMessage.msgId) &&
      self.hasMsgVer == otherMessage.hasMsgVer &&
      (!self.hasMsgVer || self.msgVer == otherMessage.msgVer) &&
      self.hasCMsgId == otherMessage.hasCMsgId &&
      (!self.hasCMsgId || self.cMsgId == otherMessage.cMsgId) &&
      self.hasServerTime == otherMessage.hasServerTime &&
      (!self.hasServerTime || self.serverTime == otherMessage.serverTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSessId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sessId] hash];
  }
  if (self.hasSessVer) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sessVer] hash];
  }
  if (self.hasMsgId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.msgId] hash];
  }
  if (self.hasMsgVer) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.msgVer] hash];
  }
  if (self.hasCMsgId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.cMsgId] hash];
  }
  if (self.hasServerTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.serverTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface MessageBufMessageACKBuilder()
@property (strong) MessageBufMessageACK* resultMessageAck;
@end

@implementation MessageBufMessageACKBuilder
@synthesize resultMessageAck;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultMessageAck = [[MessageBufMessageACK alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultMessageAck;
}
- (MessageBufMessageACKBuilder*) clear {
  self.resultMessageAck = [[MessageBufMessageACK alloc] init];
  return self;
}
- (MessageBufMessageACKBuilder*) clone {
  return [MessageBufMessageACK builderWithPrototype:resultMessageAck];
}
- (MessageBufMessageACK*) defaultInstance {
  return [MessageBufMessageACK defaultInstance];
}
- (MessageBufMessageACK*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MessageBufMessageACK*) buildPartial {
  MessageBufMessageACK* returnMe = resultMessageAck;
  self.resultMessageAck = nil;
  return returnMe;
}
- (MessageBufMessageACKBuilder*) mergeFrom:(MessageBufMessageACK*) other {
  if (other == [MessageBufMessageACK defaultInstance]) {
    return self;
  }
  if (other.hasSessId) {
    [self setSessId:other.sessId];
  }
  if (other.hasSessVer) {
    [self setSessVer:other.sessVer];
  }
  if (other.hasMsgId) {
    [self setMsgId:other.msgId];
  }
  if (other.hasMsgVer) {
    [self setMsgVer:other.msgVer];
  }
  if (other.hasCMsgId) {
    [self setCMsgId:other.cMsgId];
  }
  if (other.hasServerTime) {
    [self setServerTime:other.serverTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MessageBufMessageACKBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MessageBufMessageACKBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setSessId:[input readInt64]];
        break;
      }
      case 16: {
        [self setSessVer:[input readInt64]];
        break;
      }
      case 24: {
        [self setMsgId:[input readInt64]];
        break;
      }
      case 32: {
        [self setMsgVer:[input readInt64]];
        break;
      }
      case 40: {
        [self setCMsgId:[input readInt64]];
        break;
      }
      case 48: {
        [self setServerTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSessId {
  return resultMessageAck.hasSessId;
}
- (SInt64) sessId {
  return resultMessageAck.sessId;
}
- (MessageBufMessageACKBuilder*) setSessId:(SInt64) value {
  resultMessageAck.hasSessId = YES;
  resultMessageAck.sessId = value;
  return self;
}
- (MessageBufMessageACKBuilder*) clearSessId {
  resultMessageAck.hasSessId = NO;
  resultMessageAck.sessId = 0L;
  return self;
}
- (BOOL) hasSessVer {
  return resultMessageAck.hasSessVer;
}
- (SInt64) sessVer {
  return resultMessageAck.sessVer;
}
- (MessageBufMessageACKBuilder*) setSessVer:(SInt64) value {
  resultMessageAck.hasSessVer = YES;
  resultMessageAck.sessVer = value;
  return self;
}
- (MessageBufMessageACKBuilder*) clearSessVer {
  resultMessageAck.hasSessVer = NO;
  resultMessageAck.sessVer = 0L;
  return self;
}
- (BOOL) hasMsgId {
  return resultMessageAck.hasMsgId;
}
- (SInt64) msgId {
  return resultMessageAck.msgId;
}
- (MessageBufMessageACKBuilder*) setMsgId:(SInt64) value {
  resultMessageAck.hasMsgId = YES;
  resultMessageAck.msgId = value;
  return self;
}
- (MessageBufMessageACKBuilder*) clearMsgId {
  resultMessageAck.hasMsgId = NO;
  resultMessageAck.msgId = 0L;
  return self;
}
- (BOOL) hasMsgVer {
  return resultMessageAck.hasMsgVer;
}
- (SInt64) msgVer {
  return resultMessageAck.msgVer;
}
- (MessageBufMessageACKBuilder*) setMsgVer:(SInt64) value {
  resultMessageAck.hasMsgVer = YES;
  resultMessageAck.msgVer = value;
  return self;
}
- (MessageBufMessageACKBuilder*) clearMsgVer {
  resultMessageAck.hasMsgVer = NO;
  resultMessageAck.msgVer = 0L;
  return self;
}
- (BOOL) hasCMsgId {
  return resultMessageAck.hasCMsgId;
}
- (SInt64) cMsgId {
  return resultMessageAck.cMsgId;
}
- (MessageBufMessageACKBuilder*) setCMsgId:(SInt64) value {
  resultMessageAck.hasCMsgId = YES;
  resultMessageAck.cMsgId = value;
  return self;
}
- (MessageBufMessageACKBuilder*) clearCMsgId {
  resultMessageAck.hasCMsgId = NO;
  resultMessageAck.cMsgId = 0L;
  return self;
}
- (BOOL) hasServerTime {
  return resultMessageAck.hasServerTime;
}
- (SInt64) serverTime {
  return resultMessageAck.serverTime;
}
- (MessageBufMessageACKBuilder*) setServerTime:(SInt64) value {
  resultMessageAck.hasServerTime = YES;
  resultMessageAck.serverTime = value;
  return self;
}
- (MessageBufMessageACKBuilder*) clearServerTime {
  resultMessageAck.hasServerTime = NO;
  resultMessageAck.serverTime = 0L;
  return self;
}
@end

@interface MessageBufLoginACK ()
@property SInt64 sessVer;
@end

@implementation MessageBufLoginACK

- (BOOL) hasSessVer {
  return !!hasSessVer_;
}
- (void) setHasSessVer:(BOOL) _value_ {
  hasSessVer_ = !!_value_;
}
@synthesize sessVer;
- (instancetype) init {
  if ((self = [super init])) {
    self.sessVer = 0L;
  }
  return self;
}
static MessageBufLoginACK* defaultMessageBufLoginACKInstance = nil;
+ (void) initialize {
  if (self == [MessageBufLoginACK class]) {
    defaultMessageBufLoginACKInstance = [[MessageBufLoginACK alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultMessageBufLoginACKInstance;
}
- (instancetype) defaultInstance {
  return defaultMessageBufLoginACKInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSessVer) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSessVer) {
    [output writeInt64:1 value:self.sessVer];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSessVer) {
    size_ += computeInt64Size(1, self.sessVer);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (MessageBufLoginACK*) parseFromData:(NSData*) data {
  return (MessageBufLoginACK*)[[[MessageBufLoginACK builder] mergeFromData:data] build];
}
+ (MessageBufLoginACK*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBufLoginACK*)[[[MessageBufLoginACK builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MessageBufLoginACK*) parseFromInputStream:(NSInputStream*) input {
  return (MessageBufLoginACK*)[[[MessageBufLoginACK builder] mergeFromInputStream:input] build];
}
+ (MessageBufLoginACK*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBufLoginACK*)[[[MessageBufLoginACK builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageBufLoginACK*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MessageBufLoginACK*)[[[MessageBufLoginACK builder] mergeFromCodedInputStream:input] build];
}
+ (MessageBufLoginACK*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageBufLoginACK*)[[[MessageBufLoginACK builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageBufLoginACKBuilder*) builder {
  return [[MessageBufLoginACKBuilder alloc] init];
}
+ (MessageBufLoginACKBuilder*) builderWithPrototype:(MessageBufLoginACK*) prototype {
  return [[MessageBufLoginACK builder] mergeFrom:prototype];
}
- (MessageBufLoginACKBuilder*) builder {
  return [MessageBufLoginACK builder];
}
- (MessageBufLoginACKBuilder*) toBuilder {
  return [MessageBufLoginACK builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSessVer) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sessVer", [NSNumber numberWithLongLong:self.sessVer]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasSessVer) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sessVer] forKey: @"sessVer"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[MessageBufLoginACK class]]) {
    return NO;
  }
  MessageBufLoginACK *otherMessage = other;
  return
      self.hasSessVer == otherMessage.hasSessVer &&
      (!self.hasSessVer || self.sessVer == otherMessage.sessVer) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSessVer) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sessVer] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface MessageBufLoginACKBuilder()
@property (strong) MessageBufLoginACK* resultLoginAck;
@end

@implementation MessageBufLoginACKBuilder
@synthesize resultLoginAck;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultLoginAck = [[MessageBufLoginACK alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultLoginAck;
}
- (MessageBufLoginACKBuilder*) clear {
  self.resultLoginAck = [[MessageBufLoginACK alloc] init];
  return self;
}
- (MessageBufLoginACKBuilder*) clone {
  return [MessageBufLoginACK builderWithPrototype:resultLoginAck];
}
- (MessageBufLoginACK*) defaultInstance {
  return [MessageBufLoginACK defaultInstance];
}
- (MessageBufLoginACK*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MessageBufLoginACK*) buildPartial {
  MessageBufLoginACK* returnMe = resultLoginAck;
  self.resultLoginAck = nil;
  return returnMe;
}
- (MessageBufLoginACKBuilder*) mergeFrom:(MessageBufLoginACK*) other {
  if (other == [MessageBufLoginACK defaultInstance]) {
    return self;
  }
  if (other.hasSessVer) {
    [self setSessVer:other.sessVer];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MessageBufLoginACKBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MessageBufLoginACKBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setSessVer:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSessVer {
  return resultLoginAck.hasSessVer;
}
- (SInt64) sessVer {
  return resultLoginAck.sessVer;
}
- (MessageBufLoginACKBuilder*) setSessVer:(SInt64) value {
  resultLoginAck.hasSessVer = YES;
  resultLoginAck.sessVer = value;
  return self;
}
- (MessageBufLoginACKBuilder*) clearSessVer {
  resultLoginAck.hasSessVer = NO;
  resultLoginAck.sessVer = 0L;
  return self;
}
@end

@interface MessageBufBuilder()
@property (strong) MessageBuf* resultMessageBuf;
@end

@implementation MessageBufBuilder
@synthesize resultMessageBuf;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultMessageBuf = [[MessageBuf alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultMessageBuf;
}
- (MessageBufBuilder*) clear {
  self.resultMessageBuf = [[MessageBuf alloc] init];
  return self;
}
- (MessageBufBuilder*) clone {
  return [MessageBuf builderWithPrototype:resultMessageBuf];
}
- (MessageBuf*) defaultInstance {
  return [MessageBuf defaultInstance];
}
- (MessageBuf*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MessageBuf*) buildPartial {
  MessageBuf* returnMe = resultMessageBuf;
  self.resultMessageBuf = nil;
  return returnMe;
}
- (MessageBufBuilder*) mergeFrom:(MessageBuf*) other {
  if (other == [MessageBuf defaultInstance]) {
    return self;
  }
  if (other.hasIsRequest) {
    [self setIsRequest:other.isRequest];
  }
  if (other.hasRequestType) {
    [self setRequestType:other.requestType];
  }
  if (other.hasMessage) {
    [self mergeMessage:other.message];
  }
  if (other.hasSession) {
    [self mergeSession:other.session];
  }
  if (other.hasNotice) {
    [self mergeNotice:other.notice];
  }
  if (other.hasKeepAlive) {
    [self mergeKeepAlive:other.keepAlive];
  }
  if (other.hasUser) {
    [self mergeUser:other.user];
  }
  if (other.hasReceipt) {
    [self mergeReceipt:other.receipt];
  }
  if (other.hasKeepAliveReceipt) {
    [self mergeKeepAliveReceipt:other.keepAliveReceipt];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MessageBufBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MessageBufBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setIsRequest:[input readBool]];
        break;
      }
      case 16: {
        MessageBufRequestTypeEnum value = (MessageBufRequestTypeEnum)[input readEnum];
        if (MessageBufRequestTypeEnumIsValidValue(value)) {
          [self setRequestType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        MessageBufMessageBuilder* subBuilder = [MessageBufMessage builder];
        if (self.hasMessage) {
          [subBuilder mergeFrom:self.message];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMessage:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        MessageBufSessionBuilder* subBuilder = [MessageBufSession builder];
        if (self.hasSession) {
          [subBuilder mergeFrom:self.session];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSession:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        MessageBufNoticeBuilder* subBuilder = [MessageBufNotice builder];
        if (self.hasNotice) {
          [subBuilder mergeFrom:self.notice];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setNotice:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        MessageBufKeepAliveBuilder* subBuilder = [MessageBufKeepAlive builder];
        if (self.hasKeepAlive) {
          [subBuilder mergeFrom:self.keepAlive];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setKeepAlive:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        MessageBufUserBuilder* subBuilder = [MessageBufUser builder];
        if (self.hasUser) {
          [subBuilder mergeFrom:self.user];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUser:[subBuilder buildPartial]];
        break;
      }
      case 66: {
        MessageBufReceiptBuilder* subBuilder = [MessageBufReceipt builder];
        if (self.hasReceipt) {
          [subBuilder mergeFrom:self.receipt];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setReceipt:[subBuilder buildPartial]];
        break;
      }
      case 74: {
        MessageBufKeepAliveReceiptBuilder* subBuilder = [MessageBufKeepAliveReceipt builder];
        if (self.hasKeepAliveReceipt) {
          [subBuilder mergeFrom:self.keepAliveReceipt];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setKeepAliveReceipt:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasIsRequest {
  return resultMessageBuf.hasIsRequest;
}
- (BOOL) isRequest {
  return resultMessageBuf.isRequest;
}
- (MessageBufBuilder*) setIsRequest:(BOOL) value {
  resultMessageBuf.hasIsRequest = YES;
  resultMessageBuf.isRequest = value;
  return self;
}
- (MessageBufBuilder*) clearIsRequest {
  resultMessageBuf.hasIsRequest = NO;
  resultMessageBuf.isRequest = NO;
  return self;
}
- (BOOL) hasRequestType {
  return resultMessageBuf.hasRequestType;
}
- (MessageBufRequestTypeEnum) requestType {
  return resultMessageBuf.requestType;
}
- (MessageBufBuilder*) setRequestType:(MessageBufRequestTypeEnum) value {
  resultMessageBuf.hasRequestType = YES;
  resultMessageBuf.requestType = value;
  return self;
}
- (MessageBufBuilder*) clearRequestType {
  resultMessageBuf.hasRequestType = NO;
  resultMessageBuf.requestType = MessageBufRequestTypeEnumSingleMsg;
  return self;
}
- (BOOL) hasMessage {
  return resultMessageBuf.hasMessage;
}
- (MessageBufMessage*) message {
  return resultMessageBuf.message;
}
- (MessageBufBuilder*) setMessage:(MessageBufMessage*) value {
  resultMessageBuf.hasMessage = YES;
  resultMessageBuf.message = value;
  return self;
}
- (MessageBufBuilder*) setMessageBuilder:(MessageBufMessageBuilder*) builderForValue {
  return [self setMessage:[builderForValue build]];
}
- (MessageBufBuilder*) mergeMessage:(MessageBufMessage*) value {
  if (resultMessageBuf.hasMessage &&
      resultMessageBuf.message != [MessageBufMessage defaultInstance]) {
    resultMessageBuf.message =
      [[[MessageBufMessage builderWithPrototype:resultMessageBuf.message] mergeFrom:value] buildPartial];
  } else {
    resultMessageBuf.message = value;
  }
  resultMessageBuf.hasMessage = YES;
  return self;
}
- (MessageBufBuilder*) clearMessage {
  resultMessageBuf.hasMessage = NO;
  resultMessageBuf.message = [MessageBufMessage defaultInstance];
  return self;
}
- (BOOL) hasSession {
  return resultMessageBuf.hasSession;
}
- (MessageBufSession*) session {
  return resultMessageBuf.session;
}
- (MessageBufBuilder*) setSession:(MessageBufSession*) value {
  resultMessageBuf.hasSession = YES;
  resultMessageBuf.session = value;
  return self;
}
- (MessageBufBuilder*) setSessionBuilder:(MessageBufSessionBuilder*) builderForValue {
  return [self setSession:[builderForValue build]];
}
- (MessageBufBuilder*) mergeSession:(MessageBufSession*) value {
  if (resultMessageBuf.hasSession &&
      resultMessageBuf.session != [MessageBufSession defaultInstance]) {
    resultMessageBuf.session =
      [[[MessageBufSession builderWithPrototype:resultMessageBuf.session] mergeFrom:value] buildPartial];
  } else {
    resultMessageBuf.session = value;
  }
  resultMessageBuf.hasSession = YES;
  return self;
}
- (MessageBufBuilder*) clearSession {
  resultMessageBuf.hasSession = NO;
  resultMessageBuf.session = [MessageBufSession defaultInstance];
  return self;
}
- (BOOL) hasNotice {
  return resultMessageBuf.hasNotice;
}
- (MessageBufNotice*) notice {
  return resultMessageBuf.notice;
}
- (MessageBufBuilder*) setNotice:(MessageBufNotice*) value {
  resultMessageBuf.hasNotice = YES;
  resultMessageBuf.notice = value;
  return self;
}
- (MessageBufBuilder*) setNoticeBuilder:(MessageBufNoticeBuilder*) builderForValue {
  return [self setNotice:[builderForValue build]];
}
- (MessageBufBuilder*) mergeNotice:(MessageBufNotice*) value {
  if (resultMessageBuf.hasNotice &&
      resultMessageBuf.notice != [MessageBufNotice defaultInstance]) {
    resultMessageBuf.notice =
      [[[MessageBufNotice builderWithPrototype:resultMessageBuf.notice] mergeFrom:value] buildPartial];
  } else {
    resultMessageBuf.notice = value;
  }
  resultMessageBuf.hasNotice = YES;
  return self;
}
- (MessageBufBuilder*) clearNotice {
  resultMessageBuf.hasNotice = NO;
  resultMessageBuf.notice = [MessageBufNotice defaultInstance];
  return self;
}
- (BOOL) hasKeepAlive {
  return resultMessageBuf.hasKeepAlive;
}
- (MessageBufKeepAlive*) keepAlive {
  return resultMessageBuf.keepAlive;
}
- (MessageBufBuilder*) setKeepAlive:(MessageBufKeepAlive*) value {
  resultMessageBuf.hasKeepAlive = YES;
  resultMessageBuf.keepAlive = value;
  return self;
}
- (MessageBufBuilder*) setKeepAliveBuilder:(MessageBufKeepAliveBuilder*) builderForValue {
  return [self setKeepAlive:[builderForValue build]];
}
- (MessageBufBuilder*) mergeKeepAlive:(MessageBufKeepAlive*) value {
  if (resultMessageBuf.hasKeepAlive &&
      resultMessageBuf.keepAlive != [MessageBufKeepAlive defaultInstance]) {
    resultMessageBuf.keepAlive =
      [[[MessageBufKeepAlive builderWithPrototype:resultMessageBuf.keepAlive] mergeFrom:value] buildPartial];
  } else {
    resultMessageBuf.keepAlive = value;
  }
  resultMessageBuf.hasKeepAlive = YES;
  return self;
}
- (MessageBufBuilder*) clearKeepAlive {
  resultMessageBuf.hasKeepAlive = NO;
  resultMessageBuf.keepAlive = [MessageBufKeepAlive defaultInstance];
  return self;
}
- (BOOL) hasUser {
  return resultMessageBuf.hasUser;
}
- (MessageBufUser*) user {
  return resultMessageBuf.user;
}
- (MessageBufBuilder*) setUser:(MessageBufUser*) value {
  resultMessageBuf.hasUser = YES;
  resultMessageBuf.user = value;
  return self;
}
- (MessageBufBuilder*) setUserBuilder:(MessageBufUserBuilder*) builderForValue {
  return [self setUser:[builderForValue build]];
}
- (MessageBufBuilder*) mergeUser:(MessageBufUser*) value {
  if (resultMessageBuf.hasUser &&
      resultMessageBuf.user != [MessageBufUser defaultInstance]) {
    resultMessageBuf.user =
      [[[MessageBufUser builderWithPrototype:resultMessageBuf.user] mergeFrom:value] buildPartial];
  } else {
    resultMessageBuf.user = value;
  }
  resultMessageBuf.hasUser = YES;
  return self;
}
- (MessageBufBuilder*) clearUser {
  resultMessageBuf.hasUser = NO;
  resultMessageBuf.user = [MessageBufUser defaultInstance];
  return self;
}
- (BOOL) hasReceipt {
  return resultMessageBuf.hasReceipt;
}
- (MessageBufReceipt*) receipt {
  return resultMessageBuf.receipt;
}
- (MessageBufBuilder*) setReceipt:(MessageBufReceipt*) value {
  resultMessageBuf.hasReceipt = YES;
  resultMessageBuf.receipt = value;
  return self;
}
- (MessageBufBuilder*) setReceiptBuilder:(MessageBufReceiptBuilder*) builderForValue {
  return [self setReceipt:[builderForValue build]];
}
- (MessageBufBuilder*) mergeReceipt:(MessageBufReceipt*) value {
  if (resultMessageBuf.hasReceipt &&
      resultMessageBuf.receipt != [MessageBufReceipt defaultInstance]) {
    resultMessageBuf.receipt =
      [[[MessageBufReceipt builderWithPrototype:resultMessageBuf.receipt] mergeFrom:value] buildPartial];
  } else {
    resultMessageBuf.receipt = value;
  }
  resultMessageBuf.hasReceipt = YES;
  return self;
}
- (MessageBufBuilder*) clearReceipt {
  resultMessageBuf.hasReceipt = NO;
  resultMessageBuf.receipt = [MessageBufReceipt defaultInstance];
  return self;
}
- (BOOL) hasKeepAliveReceipt {
  return resultMessageBuf.hasKeepAliveReceipt;
}
- (MessageBufKeepAliveReceipt*) keepAliveReceipt {
  return resultMessageBuf.keepAliveReceipt;
}
- (MessageBufBuilder*) setKeepAliveReceipt:(MessageBufKeepAliveReceipt*) value {
  resultMessageBuf.hasKeepAliveReceipt = YES;
  resultMessageBuf.keepAliveReceipt = value;
  return self;
}
- (MessageBufBuilder*) setKeepAliveReceiptBuilder:(MessageBufKeepAliveReceiptBuilder*) builderForValue {
  return [self setKeepAliveReceipt:[builderForValue build]];
}
- (MessageBufBuilder*) mergeKeepAliveReceipt:(MessageBufKeepAliveReceipt*) value {
  if (resultMessageBuf.hasKeepAliveReceipt &&
      resultMessageBuf.keepAliveReceipt != [MessageBufKeepAliveReceipt defaultInstance]) {
    resultMessageBuf.keepAliveReceipt =
      [[[MessageBufKeepAliveReceipt builderWithPrototype:resultMessageBuf.keepAliveReceipt] mergeFrom:value] buildPartial];
  } else {
    resultMessageBuf.keepAliveReceipt = value;
  }
  resultMessageBuf.hasKeepAliveReceipt = YES;
  return self;
}
- (MessageBufBuilder*) clearKeepAliveReceipt {
  resultMessageBuf.hasKeepAliveReceipt = NO;
  resultMessageBuf.keepAliveReceipt = [MessageBufKeepAliveReceipt defaultInstance];
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
